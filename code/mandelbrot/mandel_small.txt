<****** Parser ******>
LetRec
	FunDef
		dbl : (var (some (float -> float)))
		f : (var (some float))
		FAdd
			Var f
			Var f
	LetRec
		FunDef
			yloop : (var (some (int -> unit)))
			y : (var (some int))
			If
				LE
					Int 10
					Var y
				Unit
				LetRec
					FunDef
						xloop : (var (some (int -> int -> unit)))
						x : (var (some int))
						y : (var (some int))
						If
							LE
								Int 10
								Var x
							Unit
							Let
								cr : (var (some float))
								FSub
									FDiv
										App
											Var dbl
											App
												Var float_of_int
												Var x
										Float 10.000000
									Float 1.500000
								Let
									ci : (var (some float))
									FSub
										FDiv
											App
												Var dbl
												App
													Var float_of_int
													Var y
											Float 10.000000
										Float 1.000000
									LetRec
										FunDef
											iloop : (var (some (int -> float -> float -> float -> float -> float -> float -> unit)))
											i : (var (some int))
											zr : (var (some float))
											zi : (var (some float))
											zr2 : (var (some float))
											zi2 : (var (some float))
											cr : (var (some float))
											ci : (var (some float))
											If
												Eq
													Var i
													Int 0
												App
													Var print_int
													Int 1
												Let
													tr : (var (some float))
													FAdd
														FSub
															Var zr2
															Var zi2
														Var cr
													Let
														ti : (var (some float))
														FAdd
															FMul
																App
																	Var dbl
																	Var zr
																Var zi
															Var ci
														Let
															zr : (var (some float))
															Var tr
															Let
																zi : (var (some float))
																Var ti
																Let
																	zr2 : (var (some float))
																	FMul
																		Var zr
																		Var zr
																	Let
																		zi2 : (var (some float))
																		FMul
																			Var zi
																			Var zi
																		If
																			Not
																				LE
																					FAdd
																						Var zr2
																						Var zi2
																					FMul
																						Float 2.000000
																						Float 2.000000
																			App
																				Var print_int
																				Int 0
																			App
																				Var iloop
																				Sub
																					Var i
																					Int 1
																				Var zr
																				Var zi
																				Var zr2
																				Var zi2
																				Var cr
																				Var ci
										Let
											Tu1 : unit
											App
												Var iloop
												Int 1000
												Float 0.000000
												Float 0.000000
												Float 0.000000
												Float 0.000000
												Var cr
												Var ci
											App
												Var xloop
												Add
													Var x
													Int 1
												Var y
					Let
						Tu3 : unit
						App
							Var xloop
							Int 0
							Var y
						Let
							Tu2 : unit
							App
								Var print_newline
								Unit
							App
								Var yloop
								Add
									Var y
									Int 1
		App
			Var yloop
			Int 0


<****** Typing ******>
LetRec
	FunDef
		dbl : (float -> float)
		f : float
		FAdd
			Var f
			Var f
	LetRec
		FunDef
			yloop : (int -> unit)
			y : int
			If
				LE
					Int 10
					Var y
				Unit
				LetRec
					FunDef
						xloop : (int -> int -> unit)
						x : int
						y : int
						If
							LE
								Int 10
								Var x
							Unit
							Let
								cr : float
								FSub
									FDiv
										App
											Var dbl
											App
												Var float_of_int
												Var x
										Float 10.000000
									Float 1.500000
								Let
									ci : float
									FSub
										FDiv
											App
												Var dbl
												App
													Var float_of_int
													Var y
											Float 10.000000
										Float 1.000000
									LetRec
										FunDef
											iloop : (int -> float -> float -> float -> float -> float -> float -> unit)
											i : int
											zr : float
											zi : float
											zr2 : float
											zi2 : float
											cr : float
											ci : float
											If
												Eq
													Var i
													Int 0
												App
													Var print_int
													Int 1
												Let
													tr : float
													FAdd
														FSub
															Var zr2
															Var zi2
														Var cr
													Let
														ti : float
														FAdd
															FMul
																App
																	Var dbl
																	Var zr
																Var zi
															Var ci
														Let
															zr : float
															Var tr
															Let
																zi : float
																Var ti
																Let
																	zr2 : float
																	FMul
																		Var zr
																		Var zr
																	Let
																		zi2 : float
																		FMul
																			Var zi
																			Var zi
																		If
																			Not
																				LE
																					FAdd
																						Var zr2
																						Var zi2
																					FMul
																						Float 2.000000
																						Float 2.000000
																			App
																				Var print_int
																				Int 0
																			App
																				Var iloop
																				Sub
																					Var i
																					Int 1
																				Var zr
																				Var zi
																				Var zr2
																				Var zi2
																				Var cr
																				Var ci
										Let
											Tu1 : unit
											App
												Var iloop
												Int 1000
												Float 0.000000
												Float 0.000000
												Float 0.000000
												Float 0.000000
												Var cr
												Var ci
											App
												Var xloop
												Add
													Var x
													Int 1
												Var y
					Let
						Tu3 : unit
						App
							Var xloop
							Int 0
							Var y
						Let
							Tu2 : unit
							App
								Var print_newline
								Unit
							App
								Var yloop
								Add
									Var y
									Int 1
		App
			Var yloop
			Int 0


<****** KNormal ******>
LetRec
	FunDef
		dbl : (float -> float)
		f : float
		FAdd f f
	LetRec
		FunDef
			yloop : (int -> unit)
			y : int
			Let
				Ti5 : int
				Int 10
				IfLE Ti5 y
					Unit
					LetRec
						FunDef
							xloop : (int -> int -> unit)
							x : int
							y : int
							Let
								Ti10 : int
								Int 10
								IfLE Ti10 x
									Unit
									Let
										cr : float
										Let
											Td14 : float
											Let
												Td12 : float
												Let
													Td11 : float
													ExtFunApp float_of_int x 
													App dbl Td11 
												Let
													Td13 : float
													Float 10.000000
													FDiv Td12 Td13
											Let
												Td15 : float
												Float 1.500000
												FSub Td14 Td15
										Let
											ci : float
											Let
												Td19 : float
												Let
													Td17 : float
													Let
														Td16 : float
														ExtFunApp float_of_int y 
														App dbl Td16 
													Let
														Td18 : float
														Float 10.000000
														FDiv Td17 Td18
												Let
													Td20 : float
													Float 1.000000
													FSub Td19 Td20
											LetRec
												FunDef
													iloop : (int -> float -> float -> float -> float -> float -> float -> unit)
													i : int
													zr : float
													zi : float
													zr2 : float
													zi2 : float
													cr : float
													ci : float
													Let
														Ti28 : int
														Int 0
														IfEq i Ti28
															Let
																Ti29 : int
																Int 1
																ExtFunApp print_int Ti29 
															Let
																tr : float
																Let
																	Td30 : float
																	FSub zr2 zi2
																	FAdd Td30 cr
																Let
																	ti : float
																	Let
																		Td32 : float
																		Let
																			Td31 : float
																			App dbl zr 
																			FMul Td31 zi
																		FAdd Td32 ci
																	Let
																		zr : float
																		Var tr
																		Let
																			zi : float
																			Var ti
																			Let
																				zr2 : float
																				FMul zr zr
																				Let
																					zi2 : float
																					FMul zi zi
																					Let
																						Td33 : float
																						FAdd zr2 zi2
																						Let
																							Td36 : float
																							Let
																								Td34 : float
																								Float 2.000000
																								Let
																									Td35 : float
																									Float 2.000000
																									FMul Td34 Td35
																							IfLE Td33 Td36
																								Let
																									Ti38 : int
																									Let
																										Ti37 : int
																										Int 1
																										Sub i Ti37
																									App iloop Ti38 zr zi zr2 zi2 cr ci 
																								Let
																									Ti39 : int
																									Int 0
																									ExtFunApp print_int Ti39 
												Let
													Tu1 : unit
													Let
														Ti21 : int
														Int 1000
														Let
															Td22 : float
															Float 0.000000
															Let
																Td23 : float
																Float 0.000000
																Let
																	Td24 : float
																	Float 0.000000
																	Let
																		Td25 : float
																		Float 0.000000
																		App iloop Ti21 Td22 Td23 Td24 Td25 cr ci 
													Let
														Ti27 : int
														Let
															Ti26 : int
															Int 1
															Add x Ti26
														App xloop Ti27 y 
						Let
							Tu3 : unit
							Let
								Ti6 : int
								Int 0
								App xloop Ti6 y 
							Let
								Tu2 : unit
								Let
									Tu7 : unit
									Unit
									ExtFunApp print_newline Tu7 
								Let
									Ti9 : int
									Let
										Ti8 : int
										Int 1
										Add y Ti8
									App yloop Ti9 
		Let
			Ti4 : int
			Int 0
			App yloop Ti4 


<****** Alpha ******>
LetRec
	FunDef
		dbl.40 : (float -> float)
		f.41 : float
		FAdd f.41 f.41
	LetRec
		FunDef
			yloop.42 : (int -> unit)
			y.43 : int
			Let
				Ti5.45 : int
				Int 10
				IfLE Ti5.45 y.43
					Unit
					LetRec
						FunDef
							xloop.46 : (int -> int -> unit)
							x.47 : int
							y.48 : int
							Let
								Ti10.55 : int
								Int 10
								IfLE Ti10.55 x.47
									Unit
									Let
										cr.56 : float
										Let
											Td14.97 : float
											Let
												Td12.99 : float
												Let
													Td11.101 : float
													ExtFunApp float_of_int x.47 
													App dbl.40 Td11.101 
												Let
													Td13.100 : float
													Float 10.000000
													FDiv Td12.99 Td13.100
											Let
												Td15.98 : float
												Float 1.500000
												FSub Td14.97 Td15.98
										Let
											ci.57 : float
											Let
												Td19.92 : float
												Let
													Td17.94 : float
													Let
														Td16.96 : float
														ExtFunApp float_of_int y.48 
														App dbl.40 Td16.96 
													Let
														Td18.95 : float
														Float 10.000000
														FDiv Td17.94 Td18.95
												Let
													Td20.93 : float
													Float 1.000000
													FSub Td19.92 Td20.93
											LetRec
												FunDef
													iloop.58 : (int -> float -> float -> float -> float -> float -> float -> unit)
													i.59 : int
													zr.60 : float
													zi.61 : float
													zr2.62 : float
													zi2.63 : float
													cr.64 : float
													ci.65 : float
													Let
														Ti28.74 : int
														Int 0
														IfEq i.59 Ti28.74
															Let
																Ti29.91 : int
																Int 1
																ExtFunApp print_int Ti29.91 
															Let
																tr.75 : float
																Let
																	Td30.90 : float
																	FSub zr2.62 zi2.63
																	FAdd Td30.90 cr.64
																Let
																	ti.76 : float
																	Let
																		Td32.88 : float
																		Let
																			Td31.89 : float
																			App dbl.40 zr.60 
																			FMul Td31.89 zi.61
																		FAdd Td32.88 ci.65
																	Let
																		zr.77 : float
																		Var tr.75
																		Let
																			zi.78 : float
																			Var ti.76
																			Let
																				zr2.79 : float
																				FMul zr.77 zr.77
																				Let
																					zi2.80 : float
																					FMul zi.78 zi.78
																					Let
																						Td33.81 : float
																						FAdd zr2.79 zi2.80
																						Let
																							Td36.82 : float
																							Let
																								Td34.86 : float
																								Float 2.000000
																								Let
																									Td35.87 : float
																									Float 2.000000
																									FMul Td34.86 Td35.87
																							IfLE Td33.81 Td36.82
																								Let
																									Ti38.84 : int
																									Let
																										Ti37.85 : int
																										Int 1
																										Sub i.59 Ti37.85
																									App iloop.58 Ti38.84 zr.77 zi.78 zr2.79 zi2.80 cr.64 ci.65 
																								Let
																									Ti39.83 : int
																									Int 0
																									ExtFunApp print_int Ti39.83 
												Let
													Tu1.66 : unit
													Let
														Ti21.69 : int
														Int 1000
														Let
															Td22.70 : float
															Float 0.000000
															Let
																Td23.71 : float
																Float 0.000000
																Let
																	Td24.72 : float
																	Float 0.000000
																	Let
																		Td25.73 : float
																		Float 0.000000
																		App iloop.58 Ti21.69 Td22.70 Td23.71 Td24.72 Td25.73 cr.56 ci.57 
													Let
														Ti27.67 : int
														Let
															Ti26.68 : int
															Int 1
															Add x.47 Ti26.68
														App xloop.46 Ti27.67 y.48 
						Let
							Tu3.49 : unit
							Let
								Ti6.54 : int
								Int 0
								App xloop.46 Ti6.54 y.43 
							Let
								Tu2.50 : unit
								Let
									Tu7.53 : unit
									Unit
									ExtFunApp print_newline Tu7.53 
								Let
									Ti9.51 : int
									Let
										Ti8.52 : int
										Int 1
										Add y.43 Ti8.52
									App yloop.42 Ti9.51 
		Let
			Ti4.44 : int
			Int 0
			App yloop.42 Ti4.44 


<****** iter ******>
LetRec
	FunDef
		dbl.40 : (float -> float)
		f.41 : float
		FAdd f.41 f.41
	LetRec
		FunDef
			yloop.42 : (int -> unit)
			y.43 : int
			Let
				Ti5.45 : int
				Int 10
				IfLE Ti5.45 y.43
					Unit
					LetRec
						FunDef
							xloop.46 : (int -> int -> unit)
							x.47 : int
							y.48 : int
							Let
								Ti10.55 : int
								Int 10
								IfLE Ti10.55 x.47
									Unit
									Let
										Td11.101 : float
										ExtFunApp float_of_int x.47 
										Let
											Td12.99 : float
											App dbl.40 Td11.101 
											Let
												Td13.100 : float
												Float 10.000000
												Let
													Td14.97 : float
													FDiv Td12.99 Td13.100
													Let
														Td15.98 : float
														Float 1.500000
														Let
															cr.56 : float
															FSub Td14.97 Td15.98
															Let
																Td16.96 : float
																ExtFunApp float_of_int y.48 
																Let
																	Td17.94 : float
																	App dbl.40 Td16.96 
																	Let
																		Td18.95 : float
																		Float 10.000000
																		Let
																			Td19.92 : float
																			FDiv Td17.94 Td18.95
																			Let
																				Td20.93 : float
																				Float 1.000000
																				Let
																					ci.57 : float
																					FSub Td19.92 Td20.93
																					LetRec
																						FunDef
																							iloop.58 : (int -> float -> float -> float -> float -> float -> float -> unit)
																							i.59 : int
																							zr.60 : float
																							zi.61 : float
																							zr2.62 : float
																							zi2.63 : float
																							cr.64 : float
																							ci.65 : float
																							Let
																								Ti28.74 : int
																								Int 0
																								IfEq i.59 Ti28.74
																									Let
																										Ti29.91 : int
																										Int 1
																										ExtFunApp print_int Ti29.91 
																									Let
																										Td30.90 : float
																										FSub zr2.62 zi2.63
																										Let
																											tr.75 : float
																											FAdd Td30.90 cr.64
																											Let
																												Td31.89 : float
																												App dbl.40 zr.60 
																												Let
																													Td32.88 : float
																													FMul Td31.89 zi.61
																													Let
																														ti.76 : float
																														FAdd Td32.88 ci.65
																														Let
																															zr2.79 : float
																															FMul tr.75 tr.75
																															Let
																																zi2.80 : float
																																FMul ti.76 ti.76
																																Let
																																	Td33.81 : float
																																	FAdd zr2.79 zi2.80
																																	Let
																																		Td36.82 : float
																																		Float 4.000000
																																		IfLE Td33.81 Td36.82
																																			Let
																																				Ti37.85 : int
																																				Int 1
																																				Let
																																					Ti38.84 : int
																																					Sub i.59 Ti37.85
																																					App iloop.58 Ti38.84 tr.75 ti.76 zr2.79 zi2.80 cr.64 ci.65 
																																			Let
																																				Ti39.83 : int
																																				Int 0
																																				ExtFunApp print_int Ti39.83 
																						Let
																							Ti21.69 : int
																							Int 1000
																							Let
																								Td22.70 : float
																								Float 0.000000
																								Let
																									Td23.71 : float
																									Float 0.000000
																									Let
																										Td24.72 : float
																										Float 0.000000
																										Let
																											Td25.73 : float
																											Float 0.000000
																											Let
																												Tu1.66 : unit
																												App iloop.58 Ti21.69 Td22.70 Td23.71 Td24.72 Td25.73 cr.56 ci.57 
																												Let
																													Ti26.68 : int
																													Int 1
																													Let
																														Ti27.67 : int
																														Add x.47 Ti26.68
																														App xloop.46 Ti27.67 y.48 
						Let
							Ti6.54 : int
							Int 0
							Let
								Tu3.49 : unit
								App xloop.46 Ti6.54 y.43 
								Let
									Tu7.53 : unit
									Unit
									Let
										Tu2.50 : unit
										ExtFunApp print_newline Tu7.53 
										Let
											Ti8.52 : int
											Int 1
											Let
												Ti9.51 : int
												Add y.43 Ti8.52
												App yloop.42 Ti9.51 
		Let
			Ti4.44 : int
			Int 0
			App yloop.42 Ti4.44 


<****** Closure ******>
Prog
	FunDef
		/* name */
		Ldbl.40 : (float -> float)
		/* args */
		f.41 : float
		/* formal_fv */
		/* body */
		FAdd f.41 f.41
	FunDef
		/* name */
		Liloop.58 : (int -> float -> float -> float -> float -> float -> float -> unit)
		/* args */
		i.59 : int
		zr.60 : float
		zi.61 : float
		zr2.62 : float
		zi2.63 : float
		cr.64 : float
		ci.65 : float
		/* formal_fv */
		/* body */
		Let
			Ti28.74 : int
			Int 0
			IfEq i.59 Ti28.74
				Let
					Ti29.91 : int
					Int 1
					AppDir Lmin_caml_print_int Ti29.91 
				Let
					Td30.90 : float
					FSub zr2.62 zi2.63
					Let
						tr.75 : float
						FAdd Td30.90 cr.64
						Let
							Td31.89 : float
							AppDir Ldbl.40 zr.60 
							Let
								Td32.88 : float
								FMul Td31.89 zi.61
								Let
									ti.76 : float
									FAdd Td32.88 ci.65
									Let
										zr2.79 : float
										FMul tr.75 tr.75
										Let
											zi2.80 : float
											FMul ti.76 ti.76
											Let
												Td33.81 : float
												FAdd zr2.79 zi2.80
												Let
													Td36.82 : float
													Float 4.000000
													IfLE Td33.81 Td36.82
														Let
															Ti37.85 : int
															Int 1
															Let
																Ti38.84 : int
																Sub i.59 Ti37.85
																AppDir Liloop.58 Ti38.84 tr.75 ti.76 zr2.79 zi2.80 cr.64 ci.65 
														Let
															Ti39.83 : int
															Int 0
															AppDir Lmin_caml_print_int Ti39.83 
	FunDef
		/* name */
		Lxloop.46 : (int -> int -> unit)
		/* args */
		x.47 : int
		y.48 : int
		/* formal_fv */
		/* body */
		Let
			Ti10.55 : int
			Int 10
			IfLE Ti10.55 x.47
				Unit
				Let
					Td11.101 : float
					AppDir Lmin_caml_float_of_int x.47 
					Let
						Td12.99 : float
						AppDir Ldbl.40 Td11.101 
						Let
							Td13.100 : float
							Float 10.000000
							Let
								Td14.97 : float
								FDiv Td12.99 Td13.100
								Let
									Td15.98 : float
									Float 1.500000
									Let
										cr.56 : float
										FSub Td14.97 Td15.98
										Let
											Td16.96 : float
											AppDir Lmin_caml_float_of_int y.48 
											Let
												Td17.94 : float
												AppDir Ldbl.40 Td16.96 
												Let
													Td18.95 : float
													Float 10.000000
													Let
														Td19.92 : float
														FDiv Td17.94 Td18.95
														Let
															Td20.93 : float
															Float 1.000000
															Let
																ci.57 : float
																FSub Td19.92 Td20.93
																Let
																	Ti21.69 : int
																	Int 1000
																	Let
																		Td22.70 : float
																		Float 0.000000
																		Let
																			Td23.71 : float
																			Float 0.000000
																			Let
																				Td24.72 : float
																				Float 0.000000
																				Let
																					Td25.73 : float
																					Float 0.000000
																					Let
																						Tu1.66 : unit
																						AppDir Liloop.58 Ti21.69 Td22.70 Td23.71 Td24.72 Td25.73 cr.56 ci.57 
																						Let
																							Ti26.68 : int
																							Int 1
																							Let
																								Ti27.67 : int
																								Add x.47 Ti26.68
																								AppDir Lxloop.46 Ti27.67 y.48 
	FunDef
		/* name */
		Lyloop.42 : (int -> unit)
		/* args */
		y.43 : int
		/* formal_fv */
		/* body */
		Let
			Ti5.45 : int
			Int 10
			IfLE Ti5.45 y.43
				Unit
				Let
					Ti6.54 : int
					Int 0
					Let
						Tu3.49 : unit
						AppDir Lxloop.46 Ti6.54 y.43 
						Let
							Tu7.53 : unit
							Unit
							Let
								Tu2.50 : unit
								AppDir Lmin_caml_print_newline Tu7.53 
								Let
									Ti8.52 : int
									Int 1
									Let
										Ti9.51 : int
										Add y.43 Ti8.52
										AppDir Lyloop.42 Ti9.51 
	Let
		Ti4.44 : int
		Int 0
		AppDir Lyloop.42 Ti4.44 


<****** Virtual ******>
Prog
	FunDef
		Ldbl.40
		/* args */
		/* fargs */
		f.41
		Ans
			FAddD f.41 f.41
		float
	FunDef
		Liloop.58
		/* args */
		i.59
		/* fargs */
		zr.60
		zi.61
		zr2.62
		zi2.63
		cr.64
		ci.65
		Let
			Ti28.74 : int
			Set 0
			Ans
				IfEq i.59 (V Ti28.74)
					Let
						Ti29.91 : int
						Set 1
						Ans
							CallDir
								Lmin_caml_print_int
								Ti29.91 
								
					Let
						Td30.90 : float
						FSubD zr2.62 zi2.63
						Let
							tr.75 : float
							FAddD Td30.90 cr.64
							Let
								Td31.89 : float
								CallDir
									Ldbl.40
									
									zr.60 
								Let
									Td32.88 : float
									FMulD Td31.89 zi.61
									Let
										ti.76 : float
										FAddD Td32.88 ci.65
										Let
											zr2.79 : float
											FMulD tr.75 tr.75
											Let
												zi2.80 : float
												FMulD ti.76 ti.76
												Let
													Td33.81 : float
													FAddD zr2.79 zi2.80
													Let
														Td36.82 : float
														FSetD 4.000000
														Ans
															IfFLE Td33.81 Td36.82
																Let
																	Ti37.85 : int
																	Set 1
																	Let
																		Ti38.84 : int
																		Sub i.59 (V Ti37.85)
																		Ans
																			CallDir
																				Liloop.58
																				Ti38.84 
																				tr.75 ti.76 zr2.79 zi2.80 cr.64 ci.65 
																Let
																	Ti39.83 : int
																	Set 0
																	Ans
																		CallDir
																			Lmin_caml_print_int
																			Ti39.83 
																			
		unit
	FunDef
		Lxloop.46
		/* args */
		x.47
		y.48
		/* fargs */
		Let
			Ti10.55 : int
			Set 10
			Ans
				IfLE Ti10.55 (V x.47)
					Ans
						Nop
					Let
						Td11.101 : float
						CallDir
							Lmin_caml_float_of_int
							x.47 
							
						Let
							Td12.99 : float
							CallDir
								Ldbl.40
								
								Td11.101 
							Let
								Td13.100 : float
								FSetD 10.000000
								Let
									Td14.97 : float
									FDivD Td12.99 Td13.100
									Let
										Td15.98 : float
										FSetD 1.500000
										Let
											cr.56 : float
											FSubD Td14.97 Td15.98
											Let
												Td16.96 : float
												CallDir
													Lmin_caml_float_of_int
													y.48 
													
												Let
													Td17.94 : float
													CallDir
														Ldbl.40
														
														Td16.96 
													Let
														Td18.95 : float
														FSetD 10.000000
														Let
															Td19.92 : float
															FDivD Td17.94 Td18.95
															Let
																Td20.93 : float
																FSetD 1.000000
																Let
																	ci.57 : float
																	FSubD Td19.92 Td20.93
																	Let
																		Ti21.69 : int
																		Set 1000
																		Let
																			Td22.70 : float
																			FSetD 0.000000
																			Let
																				Td23.71 : float
																				FSetD 0.000000
																				Let
																					Td24.72 : float
																					FSetD 0.000000
																					Let
																						Td25.73 : float
																						FSetD 0.000000
																						Let
																							Tu1.66 : unit
																							CallDir
																								Liloop.58
																								Ti21.69 
																								Td22.70 Td23.71 Td24.72 Td25.73 cr.56 ci.57 
																							Let
																								Ti26.68 : int
																								Set 1
																								Let
																									Ti27.67 : int
																									Add x.47 (V Ti26.68)
																									Ans
																										CallDir
																											Lxloop.46
																											Ti27.67 y.48 
																											
		unit
	FunDef
		Lyloop.42
		/* args */
		y.43
		/* fargs */
		Let
			Ti5.45 : int
			Set 10
			Ans
				IfLE Ti5.45 (V y.43)
					Ans
						Nop
					Let
						Ti6.54 : int
						Set 0
						Let
							Tu3.49 : unit
							CallDir
								Lxloop.46
								Ti6.54 y.43 
								
							Let
								Tu7.53 : unit
								Nop
								Let
									Tu2.50 : unit
									CallDir
										Lmin_caml_print_newline
										
										
									Let
										Ti8.52 : int
										Set 1
										Let
											Ti9.51 : int
											Add y.43 (V Ti8.52)
											Ans
												CallDir
													Lyloop.42
													Ti9.51 
													
		unit
	Let
		Ti4.44 : int
		Set 0
		Ans
			CallDir
				Lyloop.42
				Ti4.44 
				


<****** Simm ******>
Prog
	FunDef
		Ldbl.40
		/* args */
		/* fargs */
		f.41
		Ans
			FAddD f.41 f.41
		float
	FunDef
		Liloop.58
		/* args */
		i.59
		/* fargs */
		zr.60
		zi.61
		zr2.62
		zi2.63
		cr.64
		ci.65
		Ans
			IfEq i.59 (C 0)
				Let
					Ti29.91 : int
					Set 1
					Ans
						CallDir
							Lmin_caml_print_int
							Ti29.91 
							
				Let
					Td30.90 : float
					FSubD zr2.62 zi2.63
					Let
						tr.75 : float
						FAddD Td30.90 cr.64
						Let
							Td31.89 : float
							CallDir
								Ldbl.40
								
								zr.60 
							Let
								Td32.88 : float
								FMulD Td31.89 zi.61
								Let
									ti.76 : float
									FAddD Td32.88 ci.65
									Let
										zr2.79 : float
										FMulD tr.75 tr.75
										Let
											zi2.80 : float
											FMulD ti.76 ti.76
											Let
												Td33.81 : float
												FAddD zr2.79 zi2.80
												Let
													Td36.82 : float
													FSetD 4.000000
													Ans
														IfFLE Td33.81 Td36.82
															Let
																Ti38.84 : int
																Sub i.59 (C 1)
																Ans
																	CallDir
																		Liloop.58
																		Ti38.84 
																		tr.75 ti.76 zr2.79 zi2.80 cr.64 ci.65 
															Let
																Ti39.83 : int
																Set 0
																Ans
																	CallDir
																		Lmin_caml_print_int
																		Ti39.83 
																		
		unit
	FunDef
		Lxloop.46
		/* args */
		x.47
		y.48
		/* fargs */
		Ans
			IfGE x.47 (C 10)
				Ans
					Nop
				Let
					Td11.101 : float
					CallDir
						Lmin_caml_float_of_int
						x.47 
						
					Let
						Td12.99 : float
						CallDir
							Ldbl.40
							
							Td11.101 
						Let
							Td13.100 : float
							FSetD 10.000000
							Let
								Td14.97 : float
								FDivD Td12.99 Td13.100
								Let
									Td15.98 : float
									FSetD 1.500000
									Let
										cr.56 : float
										FSubD Td14.97 Td15.98
										Let
											Td16.96 : float
											CallDir
												Lmin_caml_float_of_int
												y.48 
												
											Let
												Td17.94 : float
												CallDir
													Ldbl.40
													
													Td16.96 
												Let
													Td18.95 : float
													FSetD 10.000000
													Let
														Td19.92 : float
														FDivD Td17.94 Td18.95
														Let
															Td20.93 : float
															FSetD 1.000000
															Let
																ci.57 : float
																FSubD Td19.92 Td20.93
																Let
																	Ti21.69 : int
																	Set 1000
																	Let
																		Td22.70 : float
																		FSetD 0.000000
																		Let
																			Td23.71 : float
																			FSetD 0.000000
																			Let
																				Td24.72 : float
																				FSetD 0.000000
																				Let
																					Td25.73 : float
																					FSetD 0.000000
																					Let
																						Tu1.66 : unit
																						CallDir
																							Liloop.58
																							Ti21.69 
																							Td22.70 Td23.71 Td24.72 Td25.73 cr.56 ci.57 
																						Let
																							Ti27.67 : int
																							Add x.47 (C 1)
																							Ans
																								CallDir
																									Lxloop.46
																									Ti27.67 y.48 
																									
		unit
	FunDef
		Lyloop.42
		/* args */
		y.43
		/* fargs */
		Ans
			IfGE y.43 (C 10)
				Ans
					Nop
				Let
					Ti6.54 : int
					Set 0
					Let
						Tu3.49 : unit
						CallDir
							Lxloop.46
							Ti6.54 y.43 
							
						Let
							Tu7.53 : unit
							Nop
							Let
								Tu2.50 : unit
								CallDir
									Lmin_caml_print_newline
									
									
								Let
									Ti9.51 : int
									Add y.43 (C 1)
									Ans
										CallDir
											Lyloop.42
											Ti9.51 
											
		unit
	Let
		Ti4.44 : int
		Set 0
		Ans
			CallDir
				Lyloop.42
				Ti4.44 
				


<****** RegAlloc ******>
Prog
	FunDef
		Ldbl.40
		/* args */
		/* fargs */
		$f2
		Ans
			FAddD $f2 $f2
		float
	FunDef
		Liloop.58
		/* args */
		$2
		/* fargs */
		$f2
		$f3
		$f4
		$f5
		$f6
		$f7
		Ans
			IfEq $2 (C 0)
				Let
					$2 : int
					Set 1
					Ans
						CallDir
							Lmin_caml_print_int
							$2 
							
				Let
					$f4 : float
					FSubD $f4 $f5
					Let
						$f4 : float
						FAddD $f4 $f6
						Let
							Tu107 : unit
							Save $f6 cr.64
							Let
								Tu106 : unit
								Save $2 i.59
								Let
									Tu105 : unit
									Save $f4 tr.75
									Let
										Tu104 : unit
										Save $f7 ci.65
										Let
											Tu103 : unit
											Save $f3 zi.61
											Let
												$f2 : float
												CallDir
													Ldbl.40
													
													$f2 
												Let
													$f3 : float
													Restore zi.61
													Let
														$f2 : float
														FMulD $f2 $f3
														Let
															$f7 : float
															Restore ci.65
															Let
																$f3 : float
																FAddD $f2 $f7
																Let
																	$f2 : float
																	Restore tr.75
																	Let
																		$f4 : float
																		FMulD $f2 $f2
																		Let
																			$f5 : float
																			FMulD $f3 $f3
																			Let
																				$f6 : float
																				FAddD $f4 $f5
																				Let
																					$f8 : float
																					FSetD 4.000000
																					Ans
																						IfFLE $f6 $f8
																							Let
																								$2 : int
																								Restore i.59
																								Let
																									$2 : int
																									Sub $2 (C 1)
																									Let
																										$f6 : float
																										Restore cr.64
																										Ans
																											CallDir
																												Liloop.58
																												$2 
																												$f2 $f3 $f4 $f5 $f6 $f7 
																							Let
																								$2 : int
																								Set 0
																								Ans
																									CallDir
																										Lmin_caml_print_int
																										$2 
																										
		unit
	FunDef
		Lxloop.46
		/* args */
		$2
		$3
		/* fargs */
		Ans
			IfGE $2 (C 10)
				Ans
					Nop
				Let
					Tu110 : unit
					Save $2 x.47
					Let
						Tu109 : unit
						Save $3 y.48
						Let
							$f2 : float
							CallDir
								Lmin_caml_float_of_int
								$2 
								
							Let
								$f2 : float
								CallDir
									Ldbl.40
									
									$f2 
								Let
									$f3 : float
									FSetD 10.000000
									Let
										$f2 : float
										FDivD $f2 $f3
										Let
											$f3 : float
											FSetD 1.500000
											Let
												$f2 : float
												FSubD $f2 $f3
												Let
													$2 : int
													Restore y.48
													Let
														Tu112 : unit
														Save $2 y.48
														Let
															Tu111 : unit
															Save $f2 cr.56
															Let
																$f2 : float
																CallDir
																	Lmin_caml_float_of_int
																	$2 
																	
																Let
																	$f2 : float
																	CallDir
																		Ldbl.40
																		
																		$f2 
																	Let
																		$f3 : float
																		FSetD 10.000000
																		Let
																			$f2 : float
																			FDivD $f2 $f3
																			Let
																				$f3 : float
																				FSetD 1.000000
																				Let
																					$f7 : float
																					FSubD $f2 $f3
																					Let
																						$2 : int
																						Set 1000
																						Let
																							$f2 : float
																							FSetD 0.000000
																							Let
																								$f3 : float
																								FSetD 0.000000
																								Let
																									$f4 : float
																									FSetD 0.000000
																									Let
																										$f5 : float
																										FSetD 0.000000
																										Let
																											$f6 : float
																											Restore cr.56
																											Let
																												%g0 : unit
																												CallDir
																													Liloop.58
																													$2 
																													$f2 $f3 $f4 $f5 $f6 $f7 
																												Let
																													$2 : int
																													Restore x.47
																													Let
																														$2 : int
																														Add $2 (C 1)
																														Let
																															$3 : int
																															Restore y.48
																															Ans
																																CallDir
																																	Lxloop.46
																																	$2 $3 
																																	
		unit
	FunDef
		Lyloop.42
		/* args */
		$2
		/* fargs */
		Ans
			IfGE $2 (C 10)
				Ans
					Nop
				Let
					$3 : int
					Set 0
					Let
						Tu114 : unit
						Save $2 y.43
						Let
							%g0 : unit
							CallDir
								Lxloop.46
								$3 $2 
								
							Let
								%g0 : unit
								Nop
								Let
									%g0 : unit
									CallDir
										Lmin_caml_print_newline
										
										
									Let
										$2 : int
										Restore y.43
										Let
											$2 : int
											Add $2 (C 1)
											Ans
												CallDir
													Lyloop.42
													$2 
													
		unit
	Let
		$2 : int
		Set 0
		Ans
			CallDir
				Lyloop.42
				$2 
				
