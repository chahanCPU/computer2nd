<****** Parser ******>
LetRec
	FunDef
		f : (var (some (int -> int)))
		n : (var (some int))
		If
			Eq
				Var n
				Int 0
			Int 0
			Add
				App
					Var f
					Sub
						Var n
						Int 1
				Mul
					Var n
					Int 4
	App
		Var print_int
		App
			Var f
			Int 30


<****** CatLib ******>
LetRec
	FunDef
		fequal : (var (some (float -> float -> bool)))
		x : (var (some float))
		y : (var (some float))
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (var (some (float -> float -> bool)))
			x : (var (some float))
			y : (var (some float))
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (var (some (float -> bool)))
				x : (var (some float))
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (var (some (float -> bool)))
					x : (var (some float))
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (var (some (float -> bool)))
						x : (var (some float))
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (var (some (bool -> bool -> bool)))
							x : (var (some bool))
							y : (var (some bool))
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (var (some (float -> float)))
								x : (var (some float))
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (var (some (float -> float)))
									x : (var (some float))
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (var (some (float -> float)))
										x : (var (some float))
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (var (some (float -> float)))
											x : (var (some float))
											FNeg
												Var x
										LetRec
											FunDef
												floor : (var (some (float -> float)))
												x : (var (some float))
												Let
													y : (var (some float))
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (var (some (float -> float)))
													x : (var (some float))
													Let
														x2 : (var (some float))
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (var (some (float -> float)))
														x : (var (some float))
														Let
															x2 : (var (some float))
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (var (some (float -> float)))
															x : (var (some float))
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : (var (some float))
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (var (some (float -> float)))
																x : (var (some float))
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : (var (some float))
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (var (some (float -> float)))
																	x : (var (some float))
																	Let
																		x2 : (var (some float))
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (var (some (float -> float)))
																		x : (var (some float))
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : (var (some float))
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			f : (var (some (int -> int)))
																			n : (var (some int))
																			If
																				Eq
																					Var n
																					Int 0
																				Int 0
																				Add
																					App
																						Var f
																						Sub
																							Var n
																							Int 1
																					Mul
																						Var n
																						Int 4
																		App
																			Var print_int
																			App
																				Var f
																				Int 30


<****** Typing ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg
												Var x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : float
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : float
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : float
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			f : (int -> int)
																			n : int
																			If
																				Eq
																					Var n
																					Int 0
																				Int 0
																				Add
																					App
																						Var f
																						Sub
																							Var n
																							Int 1
																					Mul
																						Var n
																						Int 4
																		App
																			Var print_int
																			App
																				Var f
																				Int 30


<****** KNormal ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Let
			Td134 : float
			Let
				Td133 : float
				Float 0.000000
				FAdd x Td133
			IfEq Td134 y
				Int 1
				Int 0
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Let
				Td132 : float
				Let
					Td131 : float
					Float 0.000000
					FAdd x Td131
				IfLE y Td132
					Int 0
					Int 1
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Let
					Td130 : float
					Float 0.000000
					IfLE x Td130
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Let
						Td129 : float
						Float 0.000000
						IfLE Td129 x
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Let
							Td128 : float
							Float 0.000000
							IfEq x Td128
								Int 1
								Int 0
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							Let
								Ti126 : int
								Int 0
								IfEq x Ti126
									Var y
									Let
										Ti127 : int
										Int 0
										IfEq y Ti127
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								Let
									Td125 : float
									Float 0.500000
									FMul x Td125
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul x x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										Let
											Td124 : float
											Float 0.000000
											IfLE Td124 x
												Var x
												FNeg x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													Let
														Ti121 : int
														ExtFunApp int_of_float x 
														ExtFunApp float_of_int Ti121 
													Let
														Td122 : float
														Float 0.000000
														IfLE Td122 x
															Var y
															IfEq x y
																Var x
																Let
																	Td123 : float
																	Float 1.000000
																	FSub y Td123
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul x x
														Let
															Td112 : float
															Float 1.000000
															Let
																Td120 : float
																Let
																	Td119 : float
																	Let
																		Td113 : float
																		Float 0.500000
																		Let
																			Td118 : float
																			Let
																				Td117 : float
																				Let
																					Td114 : float
																					Float 0.041664
																					Let
																						Td116 : float
																						Let
																							Td115 : float
																							Float 0.001370
																							FMul x2 Td115
																						FSub Td114 Td116
																				FMul x2 Td117
																			FSub Td113 Td118
																	FMul x2 Td119
																FSub Td112 Td120
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul x x
															Let
																Td111 : float
																Let
																	Td102 : float
																	Float 1.000000
																	Let
																		Td110 : float
																		Let
																			Td109 : float
																			Let
																				Td103 : float
																				Float 0.166667
																				Let
																					Td108 : float
																					Let
																						Td107 : float
																						Let
																							Td104 : float
																							Float 0.008333
																							Let
																								Td106 : float
																								Let
																									Td105 : float
																									Float 0.000196
																									FMul x2 Td105
																								FSub Td104 Td106
																						FMul x2 Td107
																					FSub Td103 Td108
																			FMul x2 Td109
																		FSub Td102 Td110
																FMul x Td111
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															Let
																Td73 : float
																Float 0.000000
																IfLE Td73 x
																	Let
																		Td74 : float
																		Float 6.283185
																		IfLE x Td74
																			Let
																				Td75 : float
																				Float 3.141593
																				IfLE Td75 x
																					Let
																						y : float
																						Let
																							Td76 : float
																							Float 3.141593
																							FSub x Td76
																						Let
																							Td77 : float
																							Float 1.570796
																							IfLE Td77 y
																								Let
																									Td78 : float
																									Float 2.356195
																									IfLE Td78 y
																										Let
																											Td80 : float
																											Let
																												Td79 : float
																												Float 3.141593
																												FSub Td79 y
																											App taylor_cos Td80 
																										Let
																											Td82 : float
																											Let
																												Td81 : float
																												Float 1.570796
																												FSub y Td81
																											App taylor_sin Td82 
																								Let
																									Td83 : float
																									Float 0.785398
																									IfLE Td83 y
																										Let
																											Td86 : float
																											Let
																												Td85 : float
																												Let
																													Td84 : float
																													Float 1.570796
																													FSub Td84 y
																												App taylor_sin Td85 
																											FNeg Td86
																										Let
																											Td87 : float
																											App taylor_cos y 
																											FNeg Td87
																					Let
																						Td88 : float
																						Float 1.570796
																						IfLE Td88 x
																							Let
																								Td89 : float
																								Float 2.356195
																								IfLE Td89 x
																									Let
																										Td92 : float
																										Let
																											Td91 : float
																											Let
																												Td90 : float
																												Float 3.141593
																												FSub Td90 x
																											App taylor_cos Td91 
																										FNeg Td92
																									Let
																										Td95 : float
																										Let
																											Td94 : float
																											Let
																												Td93 : float
																												Float 1.570796
																												FSub x Td93
																											App taylor_sin Td94 
																										FNeg Td95
																							Let
																								Td96 : float
																								Float 0.785398
																								IfLE Td96 x
																									Let
																										Td98 : float
																										Let
																											Td97 : float
																											Float 1.570796
																											FSub Td97 x
																										App taylor_sin Td98 
																									App taylor_cos x 
																			Let
																				Td100 : float
																				Let
																					Td99 : float
																					Float 6.283185
																					FSub x Td99
																				App cos Td100 
																	Let
																		Td101 : float
																		FNeg x
																		App cos Td101 
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																Let
																	Td43 : float
																	Float 0.000000
																	IfLE Td43 x
																		Let
																			Td44 : float
																			Float 6.283185
																			IfLE x Td44
																				Let
																					Td45 : float
																					Float 3.141593
																					IfLE Td45 x
																						Let
																							y : float
																							Let
																								Td46 : float
																								Float 3.141593
																								FSub x Td46
																							Let
																								Td47 : float
																								Float 1.570796
																								IfLE Td47 y
																									Let
																										Td48 : float
																										Float 2.356195
																										IfLE Td48 y
																											Let
																												Td51 : float
																												Let
																													Td50 : float
																													Let
																														Td49 : float
																														Float 3.141593
																														FSub Td49 y
																													App taylor_sin Td50 
																												FNeg Td51
																											Let
																												Td54 : float
																												Let
																													Td53 : float
																													Let
																														Td52 : float
																														Float 1.570796
																														FSub y Td52
																													App taylor_cos Td53 
																												FNeg Td54
																									Let
																										Td55 : float
																										Float 0.785398
																										IfLE Td55 y
																											Let
																												Td58 : float
																												Let
																													Td57 : float
																													Let
																														Td56 : float
																														Float 1.570796
																														FSub Td56 y
																													App taylor_cos Td57 
																												FNeg Td58
																											Let
																												Td59 : float
																												App taylor_sin y 
																												FNeg Td59
																						Let
																							Td60 : float
																							Float 1.570796
																							IfLE Td60 x
																								Let
																									Td61 : float
																									Float 2.356195
																									IfLE Td61 x
																										Let
																											Td63 : float
																											Let
																												Td62 : float
																												Float 3.141593
																												FSub Td62 x
																											App taylor_sin Td63 
																										Let
																											Td65 : float
																											Let
																												Td64 : float
																												Float 1.570796
																												FSub x Td64
																											App taylor_cos Td65 
																								Let
																									Td66 : float
																									Float 0.785398
																									IfLE Td66 x
																										Let
																											Td68 : float
																											Let
																												Td67 : float
																												Float 1.570796
																												FSub Td67 x
																											App taylor_cos Td68 
																										App taylor_sin x 
																				Let
																					Td70 : float
																					Let
																						Td69 : float
																						Float 6.283185
																						FSub x Td69
																					App sin Td70 
																		Let
																			Td72 : float
																			Let
																				Td71 : float
																				FNeg x
																				App sin Td71 
																			FNeg Td72
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul x x
																		Let
																			Td42 : float
																			Let
																				Td24 : float
																				Float 1.000000
																				Let
																					Td41 : float
																					Let
																						Td40 : float
																						Let
																							Td25 : float
																							Float 0.333333
																							Let
																								Td39 : float
																								Let
																									Td38 : float
																									Let
																										Td26 : float
																										Float 0.200000
																										Let
																											Td37 : float
																											Let
																												Td36 : float
																												Let
																													Td27 : float
																													Float 0.142857
																													Let
																														Td35 : float
																														Let
																															Td34 : float
																															Let
																																Td28 : float
																																Float 0.111111
																																Let
																																	Td33 : float
																																	Let
																																		Td32 : float
																																		Let
																																			Td29 : float
																																			Float 0.089764
																																			Let
																																				Td31 : float
																																				Let
																																					Td30 : float
																																					Float 0.060035
																																					FMul Td30 x2
																																				FSub Td29 Td31
																																		FMul x2 Td32
																																	FSub Td28 Td33
																															FMul x2 Td34
																														FSub Td27 Td35
																												FMul x2 Td36
																											FSub Td26 Td37
																									FMul x2 Td38
																								FSub Td25 Td39
																						FMul x2 Td40
																					FSub Td24 Td41
																			FMul x Td42
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		Let
																			Td9 : float
																			Float 0.000000
																			IfLE Td9 x
																				Let
																					Td10 : float
																					Float 0.437500
																					IfLE Td10 x
																						Let
																							Td11 : float
																							Float 2.356195
																							IfLE Td11 x
																								Let
																									Td12 : float
																									Float 1.570796
																									Let
																										Td15 : float
																										Let
																											Td14 : float
																											Let
																												Td13 : float
																												Float 1.000000
																												FDiv Td13 x
																											App taylor_atan Td14 
																										FSub Td12 Td15
																								Let
																									Td16 : float
																									Float 0.785398
																									Let
																										Td22 : float
																										Let
																											Td21 : float
																											Let
																												Td18 : float
																												Let
																													Td17 : float
																													Float 1.000000
																													FSub x Td17
																												Let
																													Td20 : float
																													Let
																														Td19 : float
																														Float 1.000000
																														FAdd x Td19
																													FDiv Td18 Td20
																											App taylor_atan Td21 
																										FAdd Td16 Td22
																						App taylor_atan x 
																				Let
																					y : float
																					FNeg x
																					Let
																						Td23 : float
																						App atan y 
																						FNeg Td23
																	LetRec
																		FunDef
																			f : (int -> int)
																			n : int
																			Let
																				Ti3 : int
																				Int 0
																				IfEq n Ti3
																					Int 0
																					Let
																						Ti6 : int
																						Let
																							Ti5 : int
																							Let
																								Ti4 : int
																								Int 1
																								Sub n Ti4
																							App f Ti5 
																						Let
																							Ti8 : int
																							Let
																								Ti7 : int
																								Int 4
																								Mul n Ti7
																							Add Ti6 Ti8
																		Let
																			Ti2 : int
																			Let
																				Ti1 : int
																				Int 30
																				App f Ti1 
																			ExtFunApp print_int Ti2 


<****** Alpha ******>
LetRec
	FunDef
		fequal.135 : (float -> float -> bool)
		x.136 : float
		y.137 : float
		Let
			Td134.313 : float
			Let
				Td133.314 : float
				Float 0.000000
				FAdd x.136 Td133.314
			IfEq Td134.313 y.137
				Int 1
				Int 0
	LetRec
		FunDef
			fless.138 : (float -> float -> bool)
			x.139 : float
			y.140 : float
			Let
				Td132.311 : float
				Let
					Td131.312 : float
					Float 0.000000
					FAdd x.139 Td131.312
				IfLE y.140 Td132.311
					Int 0
					Int 1
		LetRec
			FunDef
				fispos.141 : (float -> bool)
				x.142 : float
				Let
					Td130.310 : float
					Float 0.000000
					IfLE x.142 Td130.310
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg.143 : (float -> bool)
					x.144 : float
					Let
						Td129.309 : float
						Float 0.000000
						IfLE Td129.309 x.144
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero.145 : (float -> bool)
						x.146 : float
						Let
							Td128.308 : float
							Float 0.000000
							IfEq x.146 Td128.308
								Int 1
								Int 0
					LetRec
						FunDef
							xor.147 : (bool -> bool -> bool)
							x.148 : bool
							y.149 : bool
							Let
								Ti126.306 : int
								Int 0
								IfEq x.148 Ti126.306
									Var y.149
									Let
										Ti127.307 : int
										Int 0
										IfEq y.149 Ti127.307
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf.150 : (float -> float)
								x.151 : float
								Let
									Td125.305 : float
									Float 0.500000
									FMul x.151 Td125.305
							LetRec
								FunDef
									fsqr.152 : (float -> float)
									x.153 : float
									FMul x.153 x.153
								LetRec
									FunDef
										fabs.154 : (float -> float)
										x.155 : float
										Let
											Td124.304 : float
											Float 0.000000
											IfLE Td124.304 x.155
												Var x.155
												FNeg x.155
									LetRec
										FunDef
											fneg.156 : (float -> float)
											x.157 : float
											FNeg x.157
										LetRec
											FunDef
												floor.158 : (float -> float)
												x.159 : float
												Let
													y.300 : float
													Let
														Ti121.303 : int
														ExtFunApp int_of_float x.159 
														ExtFunApp float_of_int Ti121.303 
													Let
														Td122.301 : float
														Float 0.000000
														IfLE Td122.301 x.159
															Var y.300
															IfEq x.159 y.300
																Var x.159
																Let
																	Td123.302 : float
																	Float 1.000000
																	FSub y.300 Td123.302
											LetRec
												FunDef
													taylor_cos.160 : (float -> float)
													x.161 : float
													Let
														x2.290 : float
														FMul x.161 x.161
														Let
															Td112.291 : float
															Float 1.000000
															Let
																Td120.292 : float
																Let
																	Td119.293 : float
																	Let
																		Td113.294 : float
																		Float 0.500000
																		Let
																			Td118.295 : float
																			Let
																				Td117.296 : float
																				Let
																					Td114.297 : float
																					Float 0.041664
																					Let
																						Td116.298 : float
																						Let
																							Td115.299 : float
																							Float 0.001370
																							FMul x2.290 Td115.299
																						FSub Td114.297 Td116.298
																				FMul x2.290 Td117.296
																			FSub Td113.294 Td118.295
																	FMul x2.290 Td119.293
																FSub Td112.291 Td120.292
												LetRec
													FunDef
														taylor_sin.162 : (float -> float)
														x.163 : float
														Let
															x2.279 : float
															FMul x.163 x.163
															Let
																Td111.280 : float
																Let
																	Td102.281 : float
																	Float 1.000000
																	Let
																		Td110.282 : float
																		Let
																			Td109.283 : float
																			Let
																				Td103.284 : float
																				Float 0.166667
																				Let
																					Td108.285 : float
																					Let
																						Td107.286 : float
																						Let
																							Td104.287 : float
																							Float 0.008333
																							Let
																								Td106.288 : float
																								Let
																									Td105.289 : float
																									Float 0.000196
																									FMul x2.279 Td105.289
																								FSub Td104.287 Td106.288
																						FMul x2.279 Td107.286
																					FSub Td103.284 Td108.285
																			FMul x2.279 Td109.283
																		FSub Td102.281 Td110.282
																FMul x.163 Td111.280
													LetRec
														FunDef
															cos.164 : (float -> float)
															x.165 : float
															Let
																Td73.249 : float
																Float 0.000000
																IfLE Td73.249 x.165
																	Let
																		Td74.251 : float
																		Float 6.283185
																		IfLE x.165 Td74.251
																			Let
																				Td75.254 : float
																				Float 3.141593
																				IfLE Td75.254 x.165
																					Let
																						y.266 : float
																						Let
																							Td76.278 : float
																							Float 3.141593
																							FSub x.165 Td76.278
																						Let
																							Td77.267 : float
																							Float 1.570796
																							IfLE Td77.267 y.266
																								Let
																									Td78.273 : float
																									Float 2.356195
																									IfLE Td78.273 y.266
																										Let
																											Td80.276 : float
																											Let
																												Td79.277 : float
																												Float 3.141593
																												FSub Td79.277 y.266
																											App taylor_cos.160 Td80.276 
																										Let
																											Td82.274 : float
																											Let
																												Td81.275 : float
																												Float 1.570796
																												FSub y.266 Td81.275
																											App taylor_sin.162 Td82.274 
																								Let
																									Td83.268 : float
																									Float 0.785398
																									IfLE Td83.268 y.266
																										Let
																											Td86.270 : float
																											Let
																												Td85.271 : float
																												Let
																													Td84.272 : float
																													Float 1.570796
																													FSub Td84.272 y.266
																												App taylor_sin.162 Td85.271 
																											FNeg Td86.270
																										Let
																											Td87.269 : float
																											App taylor_cos.160 y.266 
																											FNeg Td87.269
																					Let
																						Td88.255 : float
																						Float 1.570796
																						IfLE Td88.255 x.165
																							Let
																								Td89.259 : float
																								Float 2.356195
																								IfLE Td89.259 x.165
																									Let
																										Td92.263 : float
																										Let
																											Td91.264 : float
																											Let
																												Td90.265 : float
																												Float 3.141593
																												FSub Td90.265 x.165
																											App taylor_cos.160 Td91.264 
																										FNeg Td92.263
																									Let
																										Td95.260 : float
																										Let
																											Td94.261 : float
																											Let
																												Td93.262 : float
																												Float 1.570796
																												FSub x.165 Td93.262
																											App taylor_sin.162 Td94.261 
																										FNeg Td95.260
																							Let
																								Td96.256 : float
																								Float 0.785398
																								IfLE Td96.256 x.165
																									Let
																										Td98.257 : float
																										Let
																											Td97.258 : float
																											Float 1.570796
																											FSub Td97.258 x.165
																										App taylor_sin.162 Td98.257 
																									App taylor_cos.160 x.165 
																			Let
																				Td100.252 : float
																				Let
																					Td99.253 : float
																					Float 6.283185
																					FSub x.165 Td99.253
																				App cos.164 Td100.252 
																	Let
																		Td101.250 : float
																		FNeg x.165
																		App cos.164 Td101.250 
														LetRec
															FunDef
																sin.166 : (float -> float)
																x.167 : float
																Let
																	Td43.218 : float
																	Float 0.000000
																	IfLE Td43.218 x.167
																		Let
																			Td44.221 : float
																			Float 6.283185
																			IfLE x.167 Td44.221
																				Let
																					Td45.224 : float
																					Float 3.141593
																					IfLE Td45.224 x.167
																						Let
																							y.234 : float
																							Let
																								Td46.248 : float
																								Float 3.141593
																								FSub x.167 Td46.248
																							Let
																								Td47.235 : float
																								Float 1.570796
																								IfLE Td47.235 y.234
																									Let
																										Td48.241 : float
																										Float 2.356195
																										IfLE Td48.241 y.234
																											Let
																												Td51.245 : float
																												Let
																													Td50.246 : float
																													Let
																														Td49.247 : float
																														Float 3.141593
																														FSub Td49.247 y.234
																													App taylor_sin.162 Td50.246 
																												FNeg Td51.245
																											Let
																												Td54.242 : float
																												Let
																													Td53.243 : float
																													Let
																														Td52.244 : float
																														Float 1.570796
																														FSub y.234 Td52.244
																													App taylor_cos.160 Td53.243 
																												FNeg Td54.242
																									Let
																										Td55.236 : float
																										Float 0.785398
																										IfLE Td55.236 y.234
																											Let
																												Td58.238 : float
																												Let
																													Td57.239 : float
																													Let
																														Td56.240 : float
																														Float 1.570796
																														FSub Td56.240 y.234
																													App taylor_cos.160 Td57.239 
																												FNeg Td58.238
																											Let
																												Td59.237 : float
																												App taylor_sin.162 y.234 
																												FNeg Td59.237
																						Let
																							Td60.225 : float
																							Float 1.570796
																							IfLE Td60.225 x.167
																								Let
																									Td61.229 : float
																									Float 2.356195
																									IfLE Td61.229 x.167
																										Let
																											Td63.232 : float
																											Let
																												Td62.233 : float
																												Float 3.141593
																												FSub Td62.233 x.167
																											App taylor_sin.162 Td63.232 
																										Let
																											Td65.230 : float
																											Let
																												Td64.231 : float
																												Float 1.570796
																												FSub x.167 Td64.231
																											App taylor_cos.160 Td65.230 
																								Let
																									Td66.226 : float
																									Float 0.785398
																									IfLE Td66.226 x.167
																										Let
																											Td68.227 : float
																											Let
																												Td67.228 : float
																												Float 1.570796
																												FSub Td67.228 x.167
																											App taylor_cos.160 Td68.227 
																										App taylor_sin.162 x.167 
																				Let
																					Td70.222 : float
																					Let
																						Td69.223 : float
																						Float 6.283185
																						FSub x.167 Td69.223
																					App sin.166 Td70.222 
																		Let
																			Td72.219 : float
																			Let
																				Td71.220 : float
																				FNeg x.167
																				App sin.166 Td71.220 
																			FNeg Td72.219
															LetRec
																FunDef
																	taylor_atan.168 : (float -> float)
																	x.169 : float
																	Let
																		x2.198 : float
																		FMul x.169 x.169
																		Let
																			Td42.199 : float
																			Let
																				Td24.200 : float
																				Float 1.000000
																				Let
																					Td41.201 : float
																					Let
																						Td40.202 : float
																						Let
																							Td25.203 : float
																							Float 0.333333
																							Let
																								Td39.204 : float
																								Let
																									Td38.205 : float
																									Let
																										Td26.206 : float
																										Float 0.200000
																										Let
																											Td37.207 : float
																											Let
																												Td36.208 : float
																												Let
																													Td27.209 : float
																													Float 0.142857
																													Let
																														Td35.210 : float
																														Let
																															Td34.211 : float
																															Let
																																Td28.212 : float
																																Float 0.111111
																																Let
																																	Td33.213 : float
																																	Let
																																		Td32.214 : float
																																		Let
																																			Td29.215 : float
																																			Float 0.089764
																																			Let
																																				Td31.216 : float
																																				Let
																																					Td30.217 : float
																																					Float 0.060035
																																					FMul Td30.217 x2.198
																																				FSub Td29.215 Td31.216
																																		FMul x2.198 Td32.214
																																	FSub Td28.212 Td33.213
																															FMul x2.198 Td34.211
																														FSub Td27.209 Td35.210
																												FMul x2.198 Td36.208
																											FSub Td26.206 Td37.207
																									FMul x2.198 Td38.205
																								FSub Td25.203 Td39.204
																						FMul x2.198 Td40.202
																					FSub Td24.200 Td41.201
																			FMul x.169 Td42.199
																LetRec
																	FunDef
																		atan.170 : (float -> float)
																		x.171 : float
																		Let
																			Td9.182 : float
																			Float 0.000000
																			IfLE Td9.182 x.171
																				Let
																					Td10.185 : float
																					Float 0.437500
																					IfLE Td10.185 x.171
																						Let
																							Td11.186 : float
																							Float 2.356195
																							IfLE Td11.186 x.171
																								Let
																									Td12.194 : float
																									Float 1.570796
																									Let
																										Td15.195 : float
																										Let
																											Td14.196 : float
																											Let
																												Td13.197 : float
																												Float 1.000000
																												FDiv Td13.197 x.171
																											App taylor_atan.168 Td14.196 
																										FSub Td12.194 Td15.195
																								Let
																									Td16.187 : float
																									Float 0.785398
																									Let
																										Td22.188 : float
																										Let
																											Td21.189 : float
																											Let
																												Td18.190 : float
																												Let
																													Td17.193 : float
																													Float 1.000000
																													FSub x.171 Td17.193
																												Let
																													Td20.191 : float
																													Let
																														Td19.192 : float
																														Float 1.000000
																														FAdd x.171 Td19.192
																													FDiv Td18.190 Td20.191
																											App taylor_atan.168 Td21.189 
																										FAdd Td16.187 Td22.188
																						App taylor_atan.168 x.171 
																				Let
																					y.183 : float
																					FNeg x.171
																					Let
																						Td23.184 : float
																						App atan.170 y.183 
																						FNeg Td23.184
																	LetRec
																		FunDef
																			f.172 : (int -> int)
																			n.173 : int
																			Let
																				Ti3.176 : int
																				Int 0
																				IfEq n.173 Ti3.176
																					Int 0
																					Let
																						Ti6.177 : int
																						Let
																							Ti5.180 : int
																							Let
																								Ti4.181 : int
																								Int 1
																								Sub n.173 Ti4.181
																							App f.172 Ti5.180 
																						Let
																							Ti8.178 : int
																							Let
																								Ti7.179 : int
																								Int 4
																								Mul n.173 Ti7.179
																							Add Ti6.177 Ti8.178
																		Let
																			Ti2.174 : int
																			Let
																				Ti1.175 : int
																				Int 30
																				App f.172 Ti1.175 
																			ExtFunApp print_int Ti2.174 


<****** iter ******>
LetRec
	FunDef
		f.172 : (int -> int)
		n.173 : int
		Let
			Ti3.176 : int
			Int 0
			IfEq n.173 Ti3.176
				Int 0
				Let
					Ti4.181 : int
					Int 1
					Let
						Ti5.180 : int
						Sub n.173 Ti4.181
						Let
							Ti6.177 : int
							App f.172 Ti5.180 
							Let
								Ti7.179 : int
								Int 4
								Let
									Ti8.178 : int
									Mul n.173 Ti7.179
									Add Ti6.177 Ti8.178
	Let
		Ti1.175 : int
		Int 30
		Let
			Ti2.174 : int
			App f.172 Ti1.175 
			ExtFunApp print_int Ti2.174 


<****** Closure ******>
Prog
	FunDef
		/* name */
		Lf.172 : (int -> int)
		/* args */
		n.173 : int
		/* formal_fv */
		/* body */
		Let
			Ti3.176 : int
			Int 0
			IfEq n.173 Ti3.176
				Int 0
				Let
					Ti4.181 : int
					Int 1
					Let
						Ti5.180 : int
						Sub n.173 Ti4.181
						Let
							Ti6.177 : int
							AppDir Lf.172 Ti5.180 
							Let
								Ti7.179 : int
								Int 4
								Let
									Ti8.178 : int
									Mul n.173 Ti7.179
									Add Ti6.177 Ti8.178
	Let
		Ti1.175 : int
		Int 30
		Let
			Ti2.174 : int
			AppDir Lf.172 Ti1.175 
			AppDir Lmin_caml_print_int Ti2.174 


<****** Virtual ******>
Prog
	FunDef
		Lf.172
		/* args */
		n.173
		/* fargs */
		Let
			Ti3.176 : int
			Set 0
			Ans
				IfEq n.173 (V Ti3.176)
					Ans
						Set 0
					Let
						Ti4.181 : int
						Set 1
						Let
							Ti5.180 : int
							Sub n.173 (V Ti4.181)
							Let
								Ti6.177 : int
								CallDir
									Lf.172
									Ti5.180 
									
								Let
									Ti7.179 : int
									Set 4
									Let
										Ti8.178 : int
										Mul n.173 Ti7.179
										Ans
											Add Ti6.177 (V Ti8.178)
		int
	Let
		Ti1.175 : int
		Set 30
		Let
			Ti2.174 : int
			CallDir
				Lf.172
				Ti1.175 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.174 
					


<****** Simm ******>
Prog
	FunDef
		Lf.172
		/* args */
		n.173
		/* fargs */
		Ans
			IfEq n.173 (C 0)
				Ans
					Set 0
				Let
					Ti5.180 : int
					Sub n.173 (C 1)
					Let
						Ti6.177 : int
						CallDir
							Lf.172
							Ti5.180 
							
						Let
							Ti8.178 : int
							SLL n.173 (C 2)
							Ans
								Add Ti6.177 (V Ti8.178)
		int
	Let
		Ti1.175 : int
		Set 30
		Let
			Ti2.174 : int
			CallDir
				Lf.172
				Ti1.175 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.174 
					


<****** RegAlloc ******>
Prog
	FunDef
		Lf.172
		/* args */
		$2
		/* fargs */
		Ans
			IfEq $2 (C 0)
				Ans
					Set 0
				Let
					$3 : int
					Sub $2 (C 1)
					Let
						Tu315 : unit
						Save $2 n.173
						Let
							$2 : int
							CallDir
								Lf.172
								$3 
								
							Let
								$3 : int
								Restore n.173
								Let
									$3 : int
									SLL $3 (C 2)
									Ans
										Add $2 (V $3)
		int
	Let
		$2 : int
		Set 30
		Let
			$2 : int
			CallDir
				Lf.172
				$2 
				
			Ans
				CallDir
					Lmin_caml_print_int
					$2 
					
