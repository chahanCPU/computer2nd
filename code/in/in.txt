<****** Parser ******>
LetRec
	FunDef
		add : (var (some (int -> int)))
		n : (var (some int))
		If
			LE
				Var n
				Int 2
			App
				Var read_int
				Unit
			Add
				Add
					App
						Var add
						Sub
							Var n
							Int 1
					App
						Var add
						Sub
							Var n
							Int 2
				App
					Var read_int
					Unit
	App
		Var print_int
		App
			Var add
			Int 10


<****** CatLib ******>
LetRec
	FunDef
		fequal : (var (some (float -> float -> bool)))
		x : (var (some float))
		y : (var (some float))
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (var (some (float -> float -> bool)))
			x : (var (some float))
			y : (var (some float))
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (var (some (float -> bool)))
				x : (var (some float))
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (var (some (float -> bool)))
					x : (var (some float))
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (var (some (float -> bool)))
						x : (var (some float))
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (var (some (bool -> bool -> bool)))
							x : (var (some bool))
							y : (var (some bool))
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (var (some (float -> float)))
								x : (var (some float))
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (var (some (float -> float)))
									x : (var (some float))
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (var (some (float -> float)))
										x : (var (some float))
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (var (some (float -> float)))
											x : (var (some float))
											FNeg
												Var x
										LetRec
											FunDef
												floor : (var (some (float -> float)))
												x : (var (some float))
												Let
													y : (var (some float))
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (var (some (float -> float)))
													x : (var (some float))
													Let
														x2 : (var (some float))
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (var (some (float -> float)))
														x : (var (some float))
														Let
															x2 : (var (some float))
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (var (some (float -> float)))
															x : (var (some float))
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : (var (some float))
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (var (some (float -> float)))
																x : (var (some float))
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : (var (some float))
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (var (some (float -> float)))
																	x : (var (some float))
																	Let
																		x2 : (var (some float))
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (var (some (float -> float)))
																		x : (var (some float))
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : (var (some float))
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			add : (var (some (int -> int)))
																			n : (var (some int))
																			If
																				LE
																					Var n
																					Int 2
																				App
																					Var read_int
																					Unit
																				Add
																					Add
																						App
																							Var add
																							Sub
																								Var n
																								Int 1
																						App
																							Var add
																							Sub
																								Var n
																								Int 2
																					App
																						Var read_int
																						Unit
																		App
																			Var print_int
																			App
																				Var add
																				Int 10


<****** Typing ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg
												Var x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : float
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : float
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : float
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			add : (int -> int)
																			n : int
																			If
																				LE
																					Var n
																					Int 2
																				App
																					Var read_int
																					Unit
																				Add
																					Add
																						App
																							Var add
																							Sub
																								Var n
																								Int 1
																						App
																							Var add
																							Sub
																								Var n
																								Int 2
																					App
																						Var read_int
																						Unit
																		App
																			Var print_int
																			App
																				Var add
																				Int 10


<****** KNormal ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Let
			Td139 : float
			Let
				Td138 : float
				Float 0.000000
				FAdd x Td138
			IfEq Td139 y
				Int 1
				Int 0
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Let
				Td137 : float
				Let
					Td136 : float
					Float 0.000000
					FAdd x Td136
				IfLE y Td137
					Int 0
					Int 1
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Let
					Td135 : float
					Float 0.000000
					IfLE x Td135
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Let
						Td134 : float
						Float 0.000000
						IfLE Td134 x
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Let
							Td133 : float
							Float 0.000000
							IfEq x Td133
								Int 1
								Int 0
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							Let
								Ti131 : int
								Int 0
								IfEq x Ti131
									Var y
									Let
										Ti132 : int
										Int 0
										IfEq y Ti132
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								Let
									Td130 : float
									Float 0.500000
									FMul x Td130
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul x x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										Let
											Td129 : float
											Float 0.000000
											IfLE Td129 x
												Var x
												FNeg x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													Let
														Ti126 : int
														ExtFunApp int_of_float x 
														ExtFunApp float_of_int Ti126 
													Let
														Td127 : float
														Float 0.000000
														IfLE Td127 x
															Var y
															IfEq x y
																Var x
																Let
																	Td128 : float
																	Float 1.000000
																	FSub y Td128
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul x x
														Let
															Td117 : float
															Float 1.000000
															Let
																Td125 : float
																Let
																	Td124 : float
																	Let
																		Td118 : float
																		Float 0.500000
																		Let
																			Td123 : float
																			Let
																				Td122 : float
																				Let
																					Td119 : float
																					Float 0.041664
																					Let
																						Td121 : float
																						Let
																							Td120 : float
																							Float 0.001370
																							FMul x2 Td120
																						FSub Td119 Td121
																				FMul x2 Td122
																			FSub Td118 Td123
																	FMul x2 Td124
																FSub Td117 Td125
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul x x
															Let
																Td116 : float
																Let
																	Td107 : float
																	Float 1.000000
																	Let
																		Td115 : float
																		Let
																			Td114 : float
																			Let
																				Td108 : float
																				Float 0.166667
																				Let
																					Td113 : float
																					Let
																						Td112 : float
																						Let
																							Td109 : float
																							Float 0.008333
																							Let
																								Td111 : float
																								Let
																									Td110 : float
																									Float 0.000196
																									FMul x2 Td110
																								FSub Td109 Td111
																						FMul x2 Td112
																					FSub Td108 Td113
																			FMul x2 Td114
																		FSub Td107 Td115
																FMul x Td116
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															Let
																Td78 : float
																Float 0.000000
																IfLE Td78 x
																	Let
																		Td79 : float
																		Float 6.283185
																		IfLE x Td79
																			Let
																				Td80 : float
																				Float 3.141593
																				IfLE Td80 x
																					Let
																						y : float
																						Let
																							Td81 : float
																							Float 3.141593
																							FSub x Td81
																						Let
																							Td82 : float
																							Float 1.570796
																							IfLE Td82 y
																								Let
																									Td83 : float
																									Float 2.356195
																									IfLE Td83 y
																										Let
																											Td85 : float
																											Let
																												Td84 : float
																												Float 3.141593
																												FSub Td84 y
																											App taylor_cos Td85 
																										Let
																											Td87 : float
																											Let
																												Td86 : float
																												Float 1.570796
																												FSub y Td86
																											App taylor_sin Td87 
																								Let
																									Td88 : float
																									Float 0.785398
																									IfLE Td88 y
																										Let
																											Td91 : float
																											Let
																												Td90 : float
																												Let
																													Td89 : float
																													Float 1.570796
																													FSub Td89 y
																												App taylor_sin Td90 
																											FNeg Td91
																										Let
																											Td92 : float
																											App taylor_cos y 
																											FNeg Td92
																					Let
																						Td93 : float
																						Float 1.570796
																						IfLE Td93 x
																							Let
																								Td94 : float
																								Float 2.356195
																								IfLE Td94 x
																									Let
																										Td97 : float
																										Let
																											Td96 : float
																											Let
																												Td95 : float
																												Float 3.141593
																												FSub Td95 x
																											App taylor_cos Td96 
																										FNeg Td97
																									Let
																										Td100 : float
																										Let
																											Td99 : float
																											Let
																												Td98 : float
																												Float 1.570796
																												FSub x Td98
																											App taylor_sin Td99 
																										FNeg Td100
																							Let
																								Td101 : float
																								Float 0.785398
																								IfLE Td101 x
																									Let
																										Td103 : float
																										Let
																											Td102 : float
																											Float 1.570796
																											FSub Td102 x
																										App taylor_sin Td103 
																									App taylor_cos x 
																			Let
																				Td105 : float
																				Let
																					Td104 : float
																					Float 6.283185
																					FSub x Td104
																				App cos Td105 
																	Let
																		Td106 : float
																		FNeg x
																		App cos Td106 
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																Let
																	Td48 : float
																	Float 0.000000
																	IfLE Td48 x
																		Let
																			Td49 : float
																			Float 6.283185
																			IfLE x Td49
																				Let
																					Td50 : float
																					Float 3.141593
																					IfLE Td50 x
																						Let
																							y : float
																							Let
																								Td51 : float
																								Float 3.141593
																								FSub x Td51
																							Let
																								Td52 : float
																								Float 1.570796
																								IfLE Td52 y
																									Let
																										Td53 : float
																										Float 2.356195
																										IfLE Td53 y
																											Let
																												Td56 : float
																												Let
																													Td55 : float
																													Let
																														Td54 : float
																														Float 3.141593
																														FSub Td54 y
																													App taylor_sin Td55 
																												FNeg Td56
																											Let
																												Td59 : float
																												Let
																													Td58 : float
																													Let
																														Td57 : float
																														Float 1.570796
																														FSub y Td57
																													App taylor_cos Td58 
																												FNeg Td59
																									Let
																										Td60 : float
																										Float 0.785398
																										IfLE Td60 y
																											Let
																												Td63 : float
																												Let
																													Td62 : float
																													Let
																														Td61 : float
																														Float 1.570796
																														FSub Td61 y
																													App taylor_cos Td62 
																												FNeg Td63
																											Let
																												Td64 : float
																												App taylor_sin y 
																												FNeg Td64
																						Let
																							Td65 : float
																							Float 1.570796
																							IfLE Td65 x
																								Let
																									Td66 : float
																									Float 2.356195
																									IfLE Td66 x
																										Let
																											Td68 : float
																											Let
																												Td67 : float
																												Float 3.141593
																												FSub Td67 x
																											App taylor_sin Td68 
																										Let
																											Td70 : float
																											Let
																												Td69 : float
																												Float 1.570796
																												FSub x Td69
																											App taylor_cos Td70 
																								Let
																									Td71 : float
																									Float 0.785398
																									IfLE Td71 x
																										Let
																											Td73 : float
																											Let
																												Td72 : float
																												Float 1.570796
																												FSub Td72 x
																											App taylor_cos Td73 
																										App taylor_sin x 
																				Let
																					Td75 : float
																					Let
																						Td74 : float
																						Float 6.283185
																						FSub x Td74
																					App sin Td75 
																		Let
																			Td77 : float
																			Let
																				Td76 : float
																				FNeg x
																				App sin Td76 
																			FNeg Td77
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul x x
																		Let
																			Td47 : float
																			Let
																				Td29 : float
																				Float 1.000000
																				Let
																					Td46 : float
																					Let
																						Td45 : float
																						Let
																							Td30 : float
																							Float 0.333333
																							Let
																								Td44 : float
																								Let
																									Td43 : float
																									Let
																										Td31 : float
																										Float 0.200000
																										Let
																											Td42 : float
																											Let
																												Td41 : float
																												Let
																													Td32 : float
																													Float 0.142857
																													Let
																														Td40 : float
																														Let
																															Td39 : float
																															Let
																																Td33 : float
																																Float 0.111111
																																Let
																																	Td38 : float
																																	Let
																																		Td37 : float
																																		Let
																																			Td34 : float
																																			Float 0.089764
																																			Let
																																				Td36 : float
																																				Let
																																					Td35 : float
																																					Float 0.060035
																																					FMul Td35 x2
																																				FSub Td34 Td36
																																		FMul x2 Td37
																																	FSub Td33 Td38
																															FMul x2 Td39
																														FSub Td32 Td40
																												FMul x2 Td41
																											FSub Td31 Td42
																									FMul x2 Td43
																								FSub Td30 Td44
																						FMul x2 Td45
																					FSub Td29 Td46
																			FMul x Td47
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		Let
																			Td14 : float
																			Float 0.000000
																			IfLE Td14 x
																				Let
																					Td15 : float
																					Float 0.437500
																					IfLE Td15 x
																						Let
																							Td16 : float
																							Float 2.356195
																							IfLE Td16 x
																								Let
																									Td17 : float
																									Float 1.570796
																									Let
																										Td20 : float
																										Let
																											Td19 : float
																											Let
																												Td18 : float
																												Float 1.000000
																												FDiv Td18 x
																											App taylor_atan Td19 
																										FSub Td17 Td20
																								Let
																									Td21 : float
																									Float 0.785398
																									Let
																										Td27 : float
																										Let
																											Td26 : float
																											Let
																												Td23 : float
																												Let
																													Td22 : float
																													Float 1.000000
																													FSub x Td22
																												Let
																													Td25 : float
																													Let
																														Td24 : float
																														Float 1.000000
																														FAdd x Td24
																													FDiv Td23 Td25
																											App taylor_atan Td26 
																										FAdd Td21 Td27
																						App taylor_atan x 
																				Let
																					y : float
																					FNeg x
																					Let
																						Td28 : float
																						App atan y 
																						FNeg Td28
																	LetRec
																		FunDef
																			add : (int -> int)
																			n : int
																			Let
																				Ti3 : int
																				Int 2
																				IfLE n Ti3
																					Let
																						Tu4 : unit
																						Unit
																						ExtFunApp read_int Tu4 
																					Let
																						Ti11 : int
																						Let
																							Ti7 : int
																							Let
																								Ti6 : int
																								Let
																									Ti5 : int
																									Int 1
																									Sub n Ti5
																								App add Ti6 
																							Let
																								Ti10 : int
																								Let
																									Ti9 : int
																									Let
																										Ti8 : int
																										Int 2
																										Sub n Ti8
																									App add Ti9 
																								Add Ti7 Ti10
																						Let
																							Ti13 : int
																							Let
																								Tu12 : unit
																								Unit
																								ExtFunApp read_int Tu12 
																							Add Ti11 Ti13
																		Let
																			Ti2 : int
																			Let
																				Ti1 : int
																				Int 10
																				App add Ti1 
																			ExtFunApp print_int Ti2 


<****** Alpha ******>
LetRec
	FunDef
		fequal.140 : (float -> float -> bool)
		x.141 : float
		y.142 : float
		Let
			Td139.323 : float
			Let
				Td138.324 : float
				Float 0.000000
				FAdd x.141 Td138.324
			IfEq Td139.323 y.142
				Int 1
				Int 0
	LetRec
		FunDef
			fless.143 : (float -> float -> bool)
			x.144 : float
			y.145 : float
			Let
				Td137.321 : float
				Let
					Td136.322 : float
					Float 0.000000
					FAdd x.144 Td136.322
				IfLE y.145 Td137.321
					Int 0
					Int 1
		LetRec
			FunDef
				fispos.146 : (float -> bool)
				x.147 : float
				Let
					Td135.320 : float
					Float 0.000000
					IfLE x.147 Td135.320
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg.148 : (float -> bool)
					x.149 : float
					Let
						Td134.319 : float
						Float 0.000000
						IfLE Td134.319 x.149
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero.150 : (float -> bool)
						x.151 : float
						Let
							Td133.318 : float
							Float 0.000000
							IfEq x.151 Td133.318
								Int 1
								Int 0
					LetRec
						FunDef
							xor.152 : (bool -> bool -> bool)
							x.153 : bool
							y.154 : bool
							Let
								Ti131.316 : int
								Int 0
								IfEq x.153 Ti131.316
									Var y.154
									Let
										Ti132.317 : int
										Int 0
										IfEq y.154 Ti132.317
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf.155 : (float -> float)
								x.156 : float
								Let
									Td130.315 : float
									Float 0.500000
									FMul x.156 Td130.315
							LetRec
								FunDef
									fsqr.157 : (float -> float)
									x.158 : float
									FMul x.158 x.158
								LetRec
									FunDef
										fabs.159 : (float -> float)
										x.160 : float
										Let
											Td129.314 : float
											Float 0.000000
											IfLE Td129.314 x.160
												Var x.160
												FNeg x.160
									LetRec
										FunDef
											fneg.161 : (float -> float)
											x.162 : float
											FNeg x.162
										LetRec
											FunDef
												floor.163 : (float -> float)
												x.164 : float
												Let
													y.310 : float
													Let
														Ti126.313 : int
														ExtFunApp int_of_float x.164 
														ExtFunApp float_of_int Ti126.313 
													Let
														Td127.311 : float
														Float 0.000000
														IfLE Td127.311 x.164
															Var y.310
															IfEq x.164 y.310
																Var x.164
																Let
																	Td128.312 : float
																	Float 1.000000
																	FSub y.310 Td128.312
											LetRec
												FunDef
													taylor_cos.165 : (float -> float)
													x.166 : float
													Let
														x2.300 : float
														FMul x.166 x.166
														Let
															Td117.301 : float
															Float 1.000000
															Let
																Td125.302 : float
																Let
																	Td124.303 : float
																	Let
																		Td118.304 : float
																		Float 0.500000
																		Let
																			Td123.305 : float
																			Let
																				Td122.306 : float
																				Let
																					Td119.307 : float
																					Float 0.041664
																					Let
																						Td121.308 : float
																						Let
																							Td120.309 : float
																							Float 0.001370
																							FMul x2.300 Td120.309
																						FSub Td119.307 Td121.308
																				FMul x2.300 Td122.306
																			FSub Td118.304 Td123.305
																	FMul x2.300 Td124.303
																FSub Td117.301 Td125.302
												LetRec
													FunDef
														taylor_sin.167 : (float -> float)
														x.168 : float
														Let
															x2.289 : float
															FMul x.168 x.168
															Let
																Td116.290 : float
																Let
																	Td107.291 : float
																	Float 1.000000
																	Let
																		Td115.292 : float
																		Let
																			Td114.293 : float
																			Let
																				Td108.294 : float
																				Float 0.166667
																				Let
																					Td113.295 : float
																					Let
																						Td112.296 : float
																						Let
																							Td109.297 : float
																							Float 0.008333
																							Let
																								Td111.298 : float
																								Let
																									Td110.299 : float
																									Float 0.000196
																									FMul x2.289 Td110.299
																								FSub Td109.297 Td111.298
																						FMul x2.289 Td112.296
																					FSub Td108.294 Td113.295
																			FMul x2.289 Td114.293
																		FSub Td107.291 Td115.292
																FMul x.168 Td116.290
													LetRec
														FunDef
															cos.169 : (float -> float)
															x.170 : float
															Let
																Td78.259 : float
																Float 0.000000
																IfLE Td78.259 x.170
																	Let
																		Td79.261 : float
																		Float 6.283185
																		IfLE x.170 Td79.261
																			Let
																				Td80.264 : float
																				Float 3.141593
																				IfLE Td80.264 x.170
																					Let
																						y.276 : float
																						Let
																							Td81.288 : float
																							Float 3.141593
																							FSub x.170 Td81.288
																						Let
																							Td82.277 : float
																							Float 1.570796
																							IfLE Td82.277 y.276
																								Let
																									Td83.283 : float
																									Float 2.356195
																									IfLE Td83.283 y.276
																										Let
																											Td85.286 : float
																											Let
																												Td84.287 : float
																												Float 3.141593
																												FSub Td84.287 y.276
																											App taylor_cos.165 Td85.286 
																										Let
																											Td87.284 : float
																											Let
																												Td86.285 : float
																												Float 1.570796
																												FSub y.276 Td86.285
																											App taylor_sin.167 Td87.284 
																								Let
																									Td88.278 : float
																									Float 0.785398
																									IfLE Td88.278 y.276
																										Let
																											Td91.280 : float
																											Let
																												Td90.281 : float
																												Let
																													Td89.282 : float
																													Float 1.570796
																													FSub Td89.282 y.276
																												App taylor_sin.167 Td90.281 
																											FNeg Td91.280
																										Let
																											Td92.279 : float
																											App taylor_cos.165 y.276 
																											FNeg Td92.279
																					Let
																						Td93.265 : float
																						Float 1.570796
																						IfLE Td93.265 x.170
																							Let
																								Td94.269 : float
																								Float 2.356195
																								IfLE Td94.269 x.170
																									Let
																										Td97.273 : float
																										Let
																											Td96.274 : float
																											Let
																												Td95.275 : float
																												Float 3.141593
																												FSub Td95.275 x.170
																											App taylor_cos.165 Td96.274 
																										FNeg Td97.273
																									Let
																										Td100.270 : float
																										Let
																											Td99.271 : float
																											Let
																												Td98.272 : float
																												Float 1.570796
																												FSub x.170 Td98.272
																											App taylor_sin.167 Td99.271 
																										FNeg Td100.270
																							Let
																								Td101.266 : float
																								Float 0.785398
																								IfLE Td101.266 x.170
																									Let
																										Td103.267 : float
																										Let
																											Td102.268 : float
																											Float 1.570796
																											FSub Td102.268 x.170
																										App taylor_sin.167 Td103.267 
																									App taylor_cos.165 x.170 
																			Let
																				Td105.262 : float
																				Let
																					Td104.263 : float
																					Float 6.283185
																					FSub x.170 Td104.263
																				App cos.169 Td105.262 
																	Let
																		Td106.260 : float
																		FNeg x.170
																		App cos.169 Td106.260 
														LetRec
															FunDef
																sin.171 : (float -> float)
																x.172 : float
																Let
																	Td48.228 : float
																	Float 0.000000
																	IfLE Td48.228 x.172
																		Let
																			Td49.231 : float
																			Float 6.283185
																			IfLE x.172 Td49.231
																				Let
																					Td50.234 : float
																					Float 3.141593
																					IfLE Td50.234 x.172
																						Let
																							y.244 : float
																							Let
																								Td51.258 : float
																								Float 3.141593
																								FSub x.172 Td51.258
																							Let
																								Td52.245 : float
																								Float 1.570796
																								IfLE Td52.245 y.244
																									Let
																										Td53.251 : float
																										Float 2.356195
																										IfLE Td53.251 y.244
																											Let
																												Td56.255 : float
																												Let
																													Td55.256 : float
																													Let
																														Td54.257 : float
																														Float 3.141593
																														FSub Td54.257 y.244
																													App taylor_sin.167 Td55.256 
																												FNeg Td56.255
																											Let
																												Td59.252 : float
																												Let
																													Td58.253 : float
																													Let
																														Td57.254 : float
																														Float 1.570796
																														FSub y.244 Td57.254
																													App taylor_cos.165 Td58.253 
																												FNeg Td59.252
																									Let
																										Td60.246 : float
																										Float 0.785398
																										IfLE Td60.246 y.244
																											Let
																												Td63.248 : float
																												Let
																													Td62.249 : float
																													Let
																														Td61.250 : float
																														Float 1.570796
																														FSub Td61.250 y.244
																													App taylor_cos.165 Td62.249 
																												FNeg Td63.248
																											Let
																												Td64.247 : float
																												App taylor_sin.167 y.244 
																												FNeg Td64.247
																						Let
																							Td65.235 : float
																							Float 1.570796
																							IfLE Td65.235 x.172
																								Let
																									Td66.239 : float
																									Float 2.356195
																									IfLE Td66.239 x.172
																										Let
																											Td68.242 : float
																											Let
																												Td67.243 : float
																												Float 3.141593
																												FSub Td67.243 x.172
																											App taylor_sin.167 Td68.242 
																										Let
																											Td70.240 : float
																											Let
																												Td69.241 : float
																												Float 1.570796
																												FSub x.172 Td69.241
																											App taylor_cos.165 Td70.240 
																								Let
																									Td71.236 : float
																									Float 0.785398
																									IfLE Td71.236 x.172
																										Let
																											Td73.237 : float
																											Let
																												Td72.238 : float
																												Float 1.570796
																												FSub Td72.238 x.172
																											App taylor_cos.165 Td73.237 
																										App taylor_sin.167 x.172 
																				Let
																					Td75.232 : float
																					Let
																						Td74.233 : float
																						Float 6.283185
																						FSub x.172 Td74.233
																					App sin.171 Td75.232 
																		Let
																			Td77.229 : float
																			Let
																				Td76.230 : float
																				FNeg x.172
																				App sin.171 Td76.230 
																			FNeg Td77.229
															LetRec
																FunDef
																	taylor_atan.173 : (float -> float)
																	x.174 : float
																	Let
																		x2.208 : float
																		FMul x.174 x.174
																		Let
																			Td47.209 : float
																			Let
																				Td29.210 : float
																				Float 1.000000
																				Let
																					Td46.211 : float
																					Let
																						Td45.212 : float
																						Let
																							Td30.213 : float
																							Float 0.333333
																							Let
																								Td44.214 : float
																								Let
																									Td43.215 : float
																									Let
																										Td31.216 : float
																										Float 0.200000
																										Let
																											Td42.217 : float
																											Let
																												Td41.218 : float
																												Let
																													Td32.219 : float
																													Float 0.142857
																													Let
																														Td40.220 : float
																														Let
																															Td39.221 : float
																															Let
																																Td33.222 : float
																																Float 0.111111
																																Let
																																	Td38.223 : float
																																	Let
																																		Td37.224 : float
																																		Let
																																			Td34.225 : float
																																			Float 0.089764
																																			Let
																																				Td36.226 : float
																																				Let
																																					Td35.227 : float
																																					Float 0.060035
																																					FMul Td35.227 x2.208
																																				FSub Td34.225 Td36.226
																																		FMul x2.208 Td37.224
																																	FSub Td33.222 Td38.223
																															FMul x2.208 Td39.221
																														FSub Td32.219 Td40.220
																												FMul x2.208 Td41.218
																											FSub Td31.216 Td42.217
																									FMul x2.208 Td43.215
																								FSub Td30.213 Td44.214
																						FMul x2.208 Td45.212
																					FSub Td29.210 Td46.211
																			FMul x.174 Td47.209
																LetRec
																	FunDef
																		atan.175 : (float -> float)
																		x.176 : float
																		Let
																			Td14.192 : float
																			Float 0.000000
																			IfLE Td14.192 x.176
																				Let
																					Td15.195 : float
																					Float 0.437500
																					IfLE Td15.195 x.176
																						Let
																							Td16.196 : float
																							Float 2.356195
																							IfLE Td16.196 x.176
																								Let
																									Td17.204 : float
																									Float 1.570796
																									Let
																										Td20.205 : float
																										Let
																											Td19.206 : float
																											Let
																												Td18.207 : float
																												Float 1.000000
																												FDiv Td18.207 x.176
																											App taylor_atan.173 Td19.206 
																										FSub Td17.204 Td20.205
																								Let
																									Td21.197 : float
																									Float 0.785398
																									Let
																										Td27.198 : float
																										Let
																											Td26.199 : float
																											Let
																												Td23.200 : float
																												Let
																													Td22.203 : float
																													Float 1.000000
																													FSub x.176 Td22.203
																												Let
																													Td25.201 : float
																													Let
																														Td24.202 : float
																														Float 1.000000
																														FAdd x.176 Td24.202
																													FDiv Td23.200 Td25.201
																											App taylor_atan.173 Td26.199 
																										FAdd Td21.197 Td27.198
																						App taylor_atan.173 x.176 
																				Let
																					y.193 : float
																					FNeg x.176
																					Let
																						Td28.194 : float
																						App atan.175 y.193 
																						FNeg Td28.194
																	LetRec
																		FunDef
																			add.177 : (int -> int)
																			n.178 : int
																			Let
																				Ti3.181 : int
																				Int 2
																				IfLE n.178 Ti3.181
																					Let
																						Tu4.191 : unit
																						Unit
																						ExtFunApp read_int Tu4.191 
																					Let
																						Ti11.182 : int
																						Let
																							Ti7.185 : int
																							Let
																								Ti6.189 : int
																								Let
																									Ti5.190 : int
																									Int 1
																									Sub n.178 Ti5.190
																								App add.177 Ti6.189 
																							Let
																								Ti10.186 : int
																								Let
																									Ti9.187 : int
																									Let
																										Ti8.188 : int
																										Int 2
																										Sub n.178 Ti8.188
																									App add.177 Ti9.187 
																								Add Ti7.185 Ti10.186
																						Let
																							Ti13.183 : int
																							Let
																								Tu12.184 : unit
																								Unit
																								ExtFunApp read_int Tu12.184 
																							Add Ti11.182 Ti13.183
																		Let
																			Ti2.179 : int
																			Let
																				Ti1.180 : int
																				Int 10
																				App add.177 Ti1.180 
																			ExtFunApp print_int Ti2.179 


<****** iter ******>
LetRec
	FunDef
		add.177 : (int -> int)
		n.178 : int
		Let
			Ti3.181 : int
			Int 2
			IfLE n.178 Ti3.181
				Let
					Tu4.191 : unit
					Unit
					ExtFunApp read_int Tu4.191 
				Let
					Ti5.190 : int
					Int 1
					Let
						Ti6.189 : int
						Sub n.178 Ti5.190
						Let
							Ti7.185 : int
							App add.177 Ti6.189 
							Let
								Ti8.188 : int
								Int 2
								Let
									Ti9.187 : int
									Sub n.178 Ti8.188
									Let
										Ti10.186 : int
										App add.177 Ti9.187 
										Let
											Ti11.182 : int
											Add Ti7.185 Ti10.186
											Let
												Tu12.184 : unit
												Unit
												Let
													Ti13.183 : int
													ExtFunApp read_int Tu12.184 
													Add Ti11.182 Ti13.183
	Let
		Ti1.180 : int
		Int 10
		Let
			Ti2.179 : int
			App add.177 Ti1.180 
			ExtFunApp print_int Ti2.179 


<****** Closure ******>
Prog
	FunDef
		/* name */
		Ladd.177 : (int -> int)
		/* args */
		n.178 : int
		/* formal_fv */
		/* body */
		Let
			Ti3.181 : int
			Int 2
			IfLE n.178 Ti3.181
				Let
					Tu4.191 : unit
					Unit
					AppDir Lmin_caml_read_int Tu4.191 
				Let
					Ti5.190 : int
					Int 1
					Let
						Ti6.189 : int
						Sub n.178 Ti5.190
						Let
							Ti7.185 : int
							AppDir Ladd.177 Ti6.189 
							Let
								Ti8.188 : int
								Int 2
								Let
									Ti9.187 : int
									Sub n.178 Ti8.188
									Let
										Ti10.186 : int
										AppDir Ladd.177 Ti9.187 
										Let
											Ti11.182 : int
											Add Ti7.185 Ti10.186
											Let
												Tu12.184 : unit
												Unit
												Let
													Ti13.183 : int
													AppDir Lmin_caml_read_int Tu12.184 
													Add Ti11.182 Ti13.183
	Let
		Ti1.180 : int
		Int 10
		Let
			Ti2.179 : int
			AppDir Ladd.177 Ti1.180 
			AppDir Lmin_caml_print_int Ti2.179 


<****** Virtual ******>
Prog
	FunDef
		Ladd.177
		/* args */
		n.178
		/* fargs */
		Let
			Ti3.181 : int
			Set 2
			Ans
				IfLE n.178 (V Ti3.181)
					Let
						Tu4.191 : unit
						Nop
						Ans
							CallDir
								Lmin_caml_read_int
								
								
					Let
						Ti5.190 : int
						Set 1
						Let
							Ti6.189 : int
							Sub n.178 (V Ti5.190)
							Let
								Ti7.185 : int
								CallDir
									Ladd.177
									Ti6.189 
									
								Let
									Ti8.188 : int
									Set 2
									Let
										Ti9.187 : int
										Sub n.178 (V Ti8.188)
										Let
											Ti10.186 : int
											CallDir
												Ladd.177
												Ti9.187 
												
											Let
												Ti11.182 : int
												Add Ti7.185 (V Ti10.186)
												Let
													Tu12.184 : unit
													Nop
													Let
														Ti13.183 : int
														CallDir
															Lmin_caml_read_int
															
															
														Ans
															Add Ti11.182 (V Ti13.183)
		int
	Let
		Ti1.180 : int
		Set 10
		Let
			Ti2.179 : int
			CallDir
				Ladd.177
				Ti1.180 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.179 
					


<****** Simm ******>
Prog
	FunDef
		Ladd.177
		/* args */
		n.178
		/* fargs */
		Ans
			IfLE n.178 (C 2)
				Let
					Tu4.191 : unit
					Nop
					Ans
						CallDir
							Lmin_caml_read_int
							
							
				Let
					Ti6.189 : int
					Sub n.178 (C 1)
					Let
						Ti7.185 : int
						CallDir
							Ladd.177
							Ti6.189 
							
						Let
							Ti9.187 : int
							Sub n.178 (C 2)
							Let
								Ti10.186 : int
								CallDir
									Ladd.177
									Ti9.187 
									
								Let
									Ti11.182 : int
									Add Ti7.185 (V Ti10.186)
									Let
										Tu12.184 : unit
										Nop
										Let
											Ti13.183 : int
											CallDir
												Lmin_caml_read_int
												
												
											Ans
												Add Ti11.182 (V Ti13.183)
		int
	Let
		Ti1.180 : int
		Set 10
		Let
			Ti2.179 : int
			CallDir
				Ladd.177
				Ti1.180 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.179 
					


<****** RegAlloc ******>
Prog
	FunDef
		Ladd.177
		/* args */
		$2
		/* fargs */
		Ans
			IfLE $2 (C 2)
				Let
					%g0 : unit
					Nop
					Ans
						CallDir
							Lmin_caml_read_int
							
							
				Let
					$3 : int
					Sub $2 (C 1)
					Let
						Tu325 : unit
						Save $2 n.178
						Let
							$2 : int
							CallDir
								Ladd.177
								$3 
								
							Let
								$3 : int
								Restore n.178
								Let
									$3 : int
									Sub $3 (C 2)
									Let
										Tu326 : unit
										Save $2 Ti7.185
										Let
											$2 : int
											CallDir
												Ladd.177
												$3 
												
											Let
												$3 : int
												Restore Ti7.185
												Let
													$2 : int
													Add $3 (V $2)
													Let
														%g0 : unit
														Nop
														Let
															Tu327 : unit
															Save $2 Ti11.182
															Let
																$2 : int
																CallDir
																	Lmin_caml_read_int
																	
																	
																Let
																	$3 : int
																	Restore Ti11.182
																	Ans
																		Add $3 (V $2)
		int
	Let
		$2 : int
		Set 10
		Let
			$2 : int
			CallDir
				Ladd.177
				$2 
				
			Ans
				CallDir
					Lmin_caml_print_int
					$2 
					
