<****** Parser ******>
LetRec
	FunDef
		add : (var (some (int -> int)))
		n : (var (some int))
		If
			LE
				Var n
				Int 2
			Int 1
			Add
				Add
					App
						Var add
						Sub
							Var n
							Int 1
					App
						Var add
						Sub
							Var n
							Int 2
				App
					Var read_int
					Unit
	App
		Var print_int
		App
			Var add
			Int 7


<****** CatLib ******>
LetRec
	FunDef
		fequal : (var (some (float -> float -> bool)))
		x : (var (some float))
		y : (var (some float))
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (var (some (float -> float -> bool)))
			x : (var (some float))
			y : (var (some float))
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (var (some (float -> bool)))
				x : (var (some float))
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (var (some (float -> bool)))
					x : (var (some float))
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (var (some (float -> bool)))
						x : (var (some float))
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (var (some (bool -> bool -> bool)))
							x : (var (some bool))
							y : (var (some bool))
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (var (some (float -> float)))
								x : (var (some float))
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (var (some (float -> float)))
									x : (var (some float))
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (var (some (float -> float)))
										x : (var (some float))
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (var (some (float -> float)))
											x : (var (some float))
											FNeg
												Var x
										LetRec
											FunDef
												floor : (var (some (float -> float)))
												x : (var (some float))
												Let
													y : (var (some float))
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (var (some (float -> float)))
													x : (var (some float))
													Let
														x2 : (var (some float))
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (var (some (float -> float)))
														x : (var (some float))
														Let
															x2 : (var (some float))
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (var (some (float -> float)))
															x : (var (some float))
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : (var (some float))
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (var (some (float -> float)))
																x : (var (some float))
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : (var (some float))
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (var (some (float -> float)))
																	x : (var (some float))
																	Let
																		x2 : (var (some float))
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (var (some (float -> float)))
																		x : (var (some float))
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : (var (some float))
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			add : (var (some (int -> int)))
																			n : (var (some int))
																			If
																				LE
																					Var n
																					Int 2
																				Int 1
																				Add
																					Add
																						App
																							Var add
																							Sub
																								Var n
																								Int 1
																						App
																							Var add
																							Sub
																								Var n
																								Int 2
																					App
																						Var read_int
																						Unit
																		App
																			Var print_int
																			App
																				Var add
																				Int 7


<****** Typing ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Eq
			FAdd
				Var x
				Float 0.000000
			Var y
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Not
				LE
					Var y
					FAdd
						Var x
						Float 0.000000
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Not
					LE
						Var x
						Float 0.000000
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Not
						LE
							Float 0.000000
							Var x
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Eq
							Var x
							Float 0.000000
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							If
								Var x
								Not
									Var y
								Var y
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								FMul
									Var x
									Float 0.500000
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul
										Var x
										Var x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										If
											LE
												Float 0.000000
												Var x
											Var x
											FNeg
												Var x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg
												Var x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													App
														Var float_of_int
														App
															Var int_of_float
															Var x
													If
														LE
															Float 0.000000
															Var x
														Var y
														If
															Eq
																Var x
																Var y
															Var x
															FSub
																Var y
																Float 1.000000
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul
															Var x
															Var x
														FSub
															Float 1.000000
															FMul
																Var x2
																FSub
																	Float 0.500000
																	FMul
																		Var x2
																		FSub
																			Float 0.041664
																			FMul
																				Var x2
																				Float 0.001370
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul
																Var x
																Var x
															FMul
																Var x
																FSub
																	Float 1.000000
																	FMul
																		Var x2
																		FSub
																			Float 0.166667
																			FMul
																				Var x2
																				FSub
																					Float 0.008333
																					FMul
																						Var x2
																						Float 0.000196
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															If
																LE
																	Float 0.000000
																	Var x
																If
																	Not
																		LE
																			Var x
																			Float 6.283185
																	App
																		Var cos
																		FSub
																			Var x
																			Float 6.283185
																	If
																		Not
																			LE
																				Float 3.141593
																				Var x
																		If
																			Not
																				LE
																					Float 1.570796
																					Var x
																			If
																				Not
																					LE
																						Float 0.785398
																						Var x
																				App
																					Var taylor_cos
																					Var x
																				App
																					Var taylor_sin
																					FSub
																						Float 1.570796
																						Var x
																			If
																				Not
																					LE
																						Float 2.356195
																						Var x
																				FNeg
																					App
																						Var taylor_sin
																						FSub
																							Var x
																							Float 1.570796
																				FNeg
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var x
																		Let
																			y : float
																			FSub
																				Var x
																				Float 3.141593
																			If
																				Not
																					LE
																						Float 1.570796
																						Var y
																				If
																					Not
																						LE
																							Float 0.785398
																							Var y
																					FNeg
																						App
																							Var taylor_cos
																							Var y
																					FNeg
																						App
																							Var taylor_sin
																							FSub
																								Float 1.570796
																								Var y
																				If
																					Not
																						LE
																							Float 2.356195
																							Var y
																					App
																						Var taylor_sin
																						FSub
																							Var y
																							Float 1.570796
																					App
																						Var taylor_cos
																						FSub
																							Float 3.141593
																							Var y
																App
																	Var cos
																	FNeg
																		Var x
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																If
																	LE
																		Float 0.000000
																		Var x
																	If
																		Not
																			LE
																				Var x
																				Float 6.283185
																		App
																			Var sin
																			FSub
																				Var x
																				Float 6.283185
																		If
																			Not
																				LE
																					Float 3.141593
																					Var x
																			If
																				Not
																					LE
																						Float 1.570796
																						Var x
																				If
																					Not
																						LE
																							Float 0.785398
																							Var x
																					App
																						Var taylor_sin
																						Var x
																					App
																						Var taylor_cos
																						FSub
																							Float 1.570796
																							Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					App
																						Var taylor_cos
																						FSub
																							Var x
																							Float 1.570796
																					App
																						Var taylor_sin
																						FSub
																							Float 3.141593
																							Var x
																			Let
																				y : float
																				FSub
																					Var x
																					Float 3.141593
																				If
																					Not
																						LE
																							Float 1.570796
																							Var y
																					If
																						Not
																							LE
																								Float 0.785398
																								Var y
																						FNeg
																							App
																								Var taylor_sin
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Float 1.570796
																									Var y
																					If
																						Not
																							LE
																								Float 2.356195
																								Var y
																						FNeg
																							App
																								Var taylor_cos
																								FSub
																									Var y
																									Float 1.570796
																						FNeg
																							App
																								Var taylor_sin
																								FSub
																									Float 3.141593
																									Var y
																	FNeg
																		App
																			Var sin
																			FNeg
																				Var x
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul
																			Var x
																			Var x
																		FMul
																			Var x
																			FSub
																				Float 1.000000
																				FMul
																					Var x2
																					FSub
																						Float 0.333333
																						FMul
																							Var x2
																							FSub
																								Float 0.200000
																								FMul
																									Var x2
																									FSub
																										Float 0.142857
																										FMul
																											Var x2
																											FSub
																												Float 0.111111
																												FMul
																													Var x2
																													FSub
																														Float 0.089764
																														FMul
																															Float 0.060035
																															Var x2
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		If
																			LE
																				Float 0.000000
																				Var x
																			If
																				Not
																					LE
																						Float 0.437500
																						Var x
																				App
																					Var taylor_atan
																					Var x
																				If
																					Not
																						LE
																							Float 2.356195
																							Var x
																					FAdd
																						Float 0.785398
																						App
																							Var taylor_atan
																							FDiv
																								FSub
																									Var x
																									Float 1.000000
																								FAdd
																									Var x
																									Float 1.000000
																					FSub
																						Float 1.570796
																						App
																							Var taylor_atan
																							FDiv
																								Float 1.000000
																								Var x
																			Let
																				y : float
																				FNeg
																					Var x
																				FNeg
																					App
																						Var atan
																						Var y
																	LetRec
																		FunDef
																			add : (int -> int)
																			n : int
																			If
																				LE
																					Var n
																					Int 2
																				Int 1
																				Add
																					Add
																						App
																							Var add
																							Sub
																								Var n
																								Int 1
																						App
																							Var add
																							Sub
																								Var n
																								Int 2
																					App
																						Var read_int
																						Unit
																		App
																			Var print_int
																			App
																				Var add
																				Int 7


<****** KNormal ******>
LetRec
	FunDef
		fequal : (float -> float -> bool)
		x : float
		y : float
		Let
			Td138 : float
			Let
				Td137 : float
				Float 0.000000
				FAdd x Td137
			IfEq Td138 y
				Int 1
				Int 0
	LetRec
		FunDef
			fless : (float -> float -> bool)
			x : float
			y : float
			Let
				Td136 : float
				Let
					Td135 : float
					Float 0.000000
					FAdd x Td135
				IfLE y Td136
					Int 0
					Int 1
		LetRec
			FunDef
				fispos : (float -> bool)
				x : float
				Let
					Td134 : float
					Float 0.000000
					IfLE x Td134
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg : (float -> bool)
					x : float
					Let
						Td133 : float
						Float 0.000000
						IfLE Td133 x
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero : (float -> bool)
						x : float
						Let
							Td132 : float
							Float 0.000000
							IfEq x Td132
								Int 1
								Int 0
					LetRec
						FunDef
							xor : (bool -> bool -> bool)
							x : bool
							y : bool
							Let
								Ti130 : int
								Int 0
								IfEq x Ti130
									Var y
									Let
										Ti131 : int
										Int 0
										IfEq y Ti131
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf : (float -> float)
								x : float
								Let
									Td129 : float
									Float 0.500000
									FMul x Td129
							LetRec
								FunDef
									fsqr : (float -> float)
									x : float
									FMul x x
								LetRec
									FunDef
										fabs : (float -> float)
										x : float
										Let
											Td128 : float
											Float 0.000000
											IfLE Td128 x
												Var x
												FNeg x
									LetRec
										FunDef
											fneg : (float -> float)
											x : float
											FNeg x
										LetRec
											FunDef
												floor : (float -> float)
												x : float
												Let
													y : float
													Let
														Ti125 : int
														ExtFunApp int_of_float x 
														ExtFunApp float_of_int Ti125 
													Let
														Td126 : float
														Float 0.000000
														IfLE Td126 x
															Var y
															IfEq x y
																Var x
																Let
																	Td127 : float
																	Float 1.000000
																	FSub y Td127
											LetRec
												FunDef
													taylor_cos : (float -> float)
													x : float
													Let
														x2 : float
														FMul x x
														Let
															Td116 : float
															Float 1.000000
															Let
																Td124 : float
																Let
																	Td123 : float
																	Let
																		Td117 : float
																		Float 0.500000
																		Let
																			Td122 : float
																			Let
																				Td121 : float
																				Let
																					Td118 : float
																					Float 0.041664
																					Let
																						Td120 : float
																						Let
																							Td119 : float
																							Float 0.001370
																							FMul x2 Td119
																						FSub Td118 Td120
																				FMul x2 Td121
																			FSub Td117 Td122
																	FMul x2 Td123
																FSub Td116 Td124
												LetRec
													FunDef
														taylor_sin : (float -> float)
														x : float
														Let
															x2 : float
															FMul x x
															Let
																Td115 : float
																Let
																	Td106 : float
																	Float 1.000000
																	Let
																		Td114 : float
																		Let
																			Td113 : float
																			Let
																				Td107 : float
																				Float 0.166667
																				Let
																					Td112 : float
																					Let
																						Td111 : float
																						Let
																							Td108 : float
																							Float 0.008333
																							Let
																								Td110 : float
																								Let
																									Td109 : float
																									Float 0.000196
																									FMul x2 Td109
																								FSub Td108 Td110
																						FMul x2 Td111
																					FSub Td107 Td112
																			FMul x2 Td113
																		FSub Td106 Td114
																FMul x Td115
													LetRec
														FunDef
															cos : (float -> float)
															x : float
															Let
																Td77 : float
																Float 0.000000
																IfLE Td77 x
																	Let
																		Td78 : float
																		Float 6.283185
																		IfLE x Td78
																			Let
																				Td79 : float
																				Float 3.141593
																				IfLE Td79 x
																					Let
																						y : float
																						Let
																							Td80 : float
																							Float 3.141593
																							FSub x Td80
																						Let
																							Td81 : float
																							Float 1.570796
																							IfLE Td81 y
																								Let
																									Td82 : float
																									Float 2.356195
																									IfLE Td82 y
																										Let
																											Td84 : float
																											Let
																												Td83 : float
																												Float 3.141593
																												FSub Td83 y
																											App taylor_cos Td84 
																										Let
																											Td86 : float
																											Let
																												Td85 : float
																												Float 1.570796
																												FSub y Td85
																											App taylor_sin Td86 
																								Let
																									Td87 : float
																									Float 0.785398
																									IfLE Td87 y
																										Let
																											Td90 : float
																											Let
																												Td89 : float
																												Let
																													Td88 : float
																													Float 1.570796
																													FSub Td88 y
																												App taylor_sin Td89 
																											FNeg Td90
																										Let
																											Td91 : float
																											App taylor_cos y 
																											FNeg Td91
																					Let
																						Td92 : float
																						Float 1.570796
																						IfLE Td92 x
																							Let
																								Td93 : float
																								Float 2.356195
																								IfLE Td93 x
																									Let
																										Td96 : float
																										Let
																											Td95 : float
																											Let
																												Td94 : float
																												Float 3.141593
																												FSub Td94 x
																											App taylor_cos Td95 
																										FNeg Td96
																									Let
																										Td99 : float
																										Let
																											Td98 : float
																											Let
																												Td97 : float
																												Float 1.570796
																												FSub x Td97
																											App taylor_sin Td98 
																										FNeg Td99
																							Let
																								Td100 : float
																								Float 0.785398
																								IfLE Td100 x
																									Let
																										Td102 : float
																										Let
																											Td101 : float
																											Float 1.570796
																											FSub Td101 x
																										App taylor_sin Td102 
																									App taylor_cos x 
																			Let
																				Td104 : float
																				Let
																					Td103 : float
																					Float 6.283185
																					FSub x Td103
																				App cos Td104 
																	Let
																		Td105 : float
																		FNeg x
																		App cos Td105 
														LetRec
															FunDef
																sin : (float -> float)
																x : float
																Let
																	Td47 : float
																	Float 0.000000
																	IfLE Td47 x
																		Let
																			Td48 : float
																			Float 6.283185
																			IfLE x Td48
																				Let
																					Td49 : float
																					Float 3.141593
																					IfLE Td49 x
																						Let
																							y : float
																							Let
																								Td50 : float
																								Float 3.141593
																								FSub x Td50
																							Let
																								Td51 : float
																								Float 1.570796
																								IfLE Td51 y
																									Let
																										Td52 : float
																										Float 2.356195
																										IfLE Td52 y
																											Let
																												Td55 : float
																												Let
																													Td54 : float
																													Let
																														Td53 : float
																														Float 3.141593
																														FSub Td53 y
																													App taylor_sin Td54 
																												FNeg Td55
																											Let
																												Td58 : float
																												Let
																													Td57 : float
																													Let
																														Td56 : float
																														Float 1.570796
																														FSub y Td56
																													App taylor_cos Td57 
																												FNeg Td58
																									Let
																										Td59 : float
																										Float 0.785398
																										IfLE Td59 y
																											Let
																												Td62 : float
																												Let
																													Td61 : float
																													Let
																														Td60 : float
																														Float 1.570796
																														FSub Td60 y
																													App taylor_cos Td61 
																												FNeg Td62
																											Let
																												Td63 : float
																												App taylor_sin y 
																												FNeg Td63
																						Let
																							Td64 : float
																							Float 1.570796
																							IfLE Td64 x
																								Let
																									Td65 : float
																									Float 2.356195
																									IfLE Td65 x
																										Let
																											Td67 : float
																											Let
																												Td66 : float
																												Float 3.141593
																												FSub Td66 x
																											App taylor_sin Td67 
																										Let
																											Td69 : float
																											Let
																												Td68 : float
																												Float 1.570796
																												FSub x Td68
																											App taylor_cos Td69 
																								Let
																									Td70 : float
																									Float 0.785398
																									IfLE Td70 x
																										Let
																											Td72 : float
																											Let
																												Td71 : float
																												Float 1.570796
																												FSub Td71 x
																											App taylor_cos Td72 
																										App taylor_sin x 
																				Let
																					Td74 : float
																					Let
																						Td73 : float
																						Float 6.283185
																						FSub x Td73
																					App sin Td74 
																		Let
																			Td76 : float
																			Let
																				Td75 : float
																				FNeg x
																				App sin Td75 
																			FNeg Td76
															LetRec
																FunDef
																	taylor_atan : (float -> float)
																	x : float
																	Let
																		x2 : float
																		FMul x x
																		Let
																			Td46 : float
																			Let
																				Td28 : float
																				Float 1.000000
																				Let
																					Td45 : float
																					Let
																						Td44 : float
																						Let
																							Td29 : float
																							Float 0.333333
																							Let
																								Td43 : float
																								Let
																									Td42 : float
																									Let
																										Td30 : float
																										Float 0.200000
																										Let
																											Td41 : float
																											Let
																												Td40 : float
																												Let
																													Td31 : float
																													Float 0.142857
																													Let
																														Td39 : float
																														Let
																															Td38 : float
																															Let
																																Td32 : float
																																Float 0.111111
																																Let
																																	Td37 : float
																																	Let
																																		Td36 : float
																																		Let
																																			Td33 : float
																																			Float 0.089764
																																			Let
																																				Td35 : float
																																				Let
																																					Td34 : float
																																					Float 0.060035
																																					FMul Td34 x2
																																				FSub Td33 Td35
																																		FMul x2 Td36
																																	FSub Td32 Td37
																															FMul x2 Td38
																														FSub Td31 Td39
																												FMul x2 Td40
																											FSub Td30 Td41
																									FMul x2 Td42
																								FSub Td29 Td43
																						FMul x2 Td44
																					FSub Td28 Td45
																			FMul x Td46
																LetRec
																	FunDef
																		atan : (float -> float)
																		x : float
																		Let
																			Td13 : float
																			Float 0.000000
																			IfLE Td13 x
																				Let
																					Td14 : float
																					Float 0.437500
																					IfLE Td14 x
																						Let
																							Td15 : float
																							Float 2.356195
																							IfLE Td15 x
																								Let
																									Td16 : float
																									Float 1.570796
																									Let
																										Td19 : float
																										Let
																											Td18 : float
																											Let
																												Td17 : float
																												Float 1.000000
																												FDiv Td17 x
																											App taylor_atan Td18 
																										FSub Td16 Td19
																								Let
																									Td20 : float
																									Float 0.785398
																									Let
																										Td26 : float
																										Let
																											Td25 : float
																											Let
																												Td22 : float
																												Let
																													Td21 : float
																													Float 1.000000
																													FSub x Td21
																												Let
																													Td24 : float
																													Let
																														Td23 : float
																														Float 1.000000
																														FAdd x Td23
																													FDiv Td22 Td24
																											App taylor_atan Td25 
																										FAdd Td20 Td26
																						App taylor_atan x 
																				Let
																					y : float
																					FNeg x
																					Let
																						Td27 : float
																						App atan y 
																						FNeg Td27
																	LetRec
																		FunDef
																			add : (int -> int)
																			n : int
																			Let
																				Ti3 : int
																				Int 2
																				IfLE n Ti3
																					Int 1
																					Let
																						Ti10 : int
																						Let
																							Ti6 : int
																							Let
																								Ti5 : int
																								Let
																									Ti4 : int
																									Int 1
																									Sub n Ti4
																								App add Ti5 
																							Let
																								Ti9 : int
																								Let
																									Ti8 : int
																									Let
																										Ti7 : int
																										Int 2
																										Sub n Ti7
																									App add Ti8 
																								Add Ti6 Ti9
																						Let
																							Ti12 : int
																							Let
																								Tu11 : unit
																								Unit
																								ExtFunApp read_int Tu11 
																							Add Ti10 Ti12
																		Let
																			Ti2 : int
																			Let
																				Ti1 : int
																				Int 7
																				App add Ti1 
																			ExtFunApp print_int Ti2 


<****** Alpha ******>
LetRec
	FunDef
		fequal.139 : (float -> float -> bool)
		x.140 : float
		y.141 : float
		Let
			Td138.321 : float
			Let
				Td137.322 : float
				Float 0.000000
				FAdd x.140 Td137.322
			IfEq Td138.321 y.141
				Int 1
				Int 0
	LetRec
		FunDef
			fless.142 : (float -> float -> bool)
			x.143 : float
			y.144 : float
			Let
				Td136.319 : float
				Let
					Td135.320 : float
					Float 0.000000
					FAdd x.143 Td135.320
				IfLE y.144 Td136.319
					Int 0
					Int 1
		LetRec
			FunDef
				fispos.145 : (float -> bool)
				x.146 : float
				Let
					Td134.318 : float
					Float 0.000000
					IfLE x.146 Td134.318
						Int 0
						Int 1
			LetRec
				FunDef
					fisneg.147 : (float -> bool)
					x.148 : float
					Let
						Td133.317 : float
						Float 0.000000
						IfLE Td133.317 x.148
							Int 0
							Int 1
				LetRec
					FunDef
						fiszero.149 : (float -> bool)
						x.150 : float
						Let
							Td132.316 : float
							Float 0.000000
							IfEq x.150 Td132.316
								Int 1
								Int 0
					LetRec
						FunDef
							xor.151 : (bool -> bool -> bool)
							x.152 : bool
							y.153 : bool
							Let
								Ti130.314 : int
								Int 0
								IfEq x.152 Ti130.314
									Var y.153
									Let
										Ti131.315 : int
										Int 0
										IfEq y.153 Ti131.315
											Int 1
											Int 0
						LetRec
							FunDef
								fhalf.154 : (float -> float)
								x.155 : float
								Let
									Td129.313 : float
									Float 0.500000
									FMul x.155 Td129.313
							LetRec
								FunDef
									fsqr.156 : (float -> float)
									x.157 : float
									FMul x.157 x.157
								LetRec
									FunDef
										fabs.158 : (float -> float)
										x.159 : float
										Let
											Td128.312 : float
											Float 0.000000
											IfLE Td128.312 x.159
												Var x.159
												FNeg x.159
									LetRec
										FunDef
											fneg.160 : (float -> float)
											x.161 : float
											FNeg x.161
										LetRec
											FunDef
												floor.162 : (float -> float)
												x.163 : float
												Let
													y.308 : float
													Let
														Ti125.311 : int
														ExtFunApp int_of_float x.163 
														ExtFunApp float_of_int Ti125.311 
													Let
														Td126.309 : float
														Float 0.000000
														IfLE Td126.309 x.163
															Var y.308
															IfEq x.163 y.308
																Var x.163
																Let
																	Td127.310 : float
																	Float 1.000000
																	FSub y.308 Td127.310
											LetRec
												FunDef
													taylor_cos.164 : (float -> float)
													x.165 : float
													Let
														x2.298 : float
														FMul x.165 x.165
														Let
															Td116.299 : float
															Float 1.000000
															Let
																Td124.300 : float
																Let
																	Td123.301 : float
																	Let
																		Td117.302 : float
																		Float 0.500000
																		Let
																			Td122.303 : float
																			Let
																				Td121.304 : float
																				Let
																					Td118.305 : float
																					Float 0.041664
																					Let
																						Td120.306 : float
																						Let
																							Td119.307 : float
																							Float 0.001370
																							FMul x2.298 Td119.307
																						FSub Td118.305 Td120.306
																				FMul x2.298 Td121.304
																			FSub Td117.302 Td122.303
																	FMul x2.298 Td123.301
																FSub Td116.299 Td124.300
												LetRec
													FunDef
														taylor_sin.166 : (float -> float)
														x.167 : float
														Let
															x2.287 : float
															FMul x.167 x.167
															Let
																Td115.288 : float
																Let
																	Td106.289 : float
																	Float 1.000000
																	Let
																		Td114.290 : float
																		Let
																			Td113.291 : float
																			Let
																				Td107.292 : float
																				Float 0.166667
																				Let
																					Td112.293 : float
																					Let
																						Td111.294 : float
																						Let
																							Td108.295 : float
																							Float 0.008333
																							Let
																								Td110.296 : float
																								Let
																									Td109.297 : float
																									Float 0.000196
																									FMul x2.287 Td109.297
																								FSub Td108.295 Td110.296
																						FMul x2.287 Td111.294
																					FSub Td107.292 Td112.293
																			FMul x2.287 Td113.291
																		FSub Td106.289 Td114.290
																FMul x.167 Td115.288
													LetRec
														FunDef
															cos.168 : (float -> float)
															x.169 : float
															Let
																Td77.257 : float
																Float 0.000000
																IfLE Td77.257 x.169
																	Let
																		Td78.259 : float
																		Float 6.283185
																		IfLE x.169 Td78.259
																			Let
																				Td79.262 : float
																				Float 3.141593
																				IfLE Td79.262 x.169
																					Let
																						y.274 : float
																						Let
																							Td80.286 : float
																							Float 3.141593
																							FSub x.169 Td80.286
																						Let
																							Td81.275 : float
																							Float 1.570796
																							IfLE Td81.275 y.274
																								Let
																									Td82.281 : float
																									Float 2.356195
																									IfLE Td82.281 y.274
																										Let
																											Td84.284 : float
																											Let
																												Td83.285 : float
																												Float 3.141593
																												FSub Td83.285 y.274
																											App taylor_cos.164 Td84.284 
																										Let
																											Td86.282 : float
																											Let
																												Td85.283 : float
																												Float 1.570796
																												FSub y.274 Td85.283
																											App taylor_sin.166 Td86.282 
																								Let
																									Td87.276 : float
																									Float 0.785398
																									IfLE Td87.276 y.274
																										Let
																											Td90.278 : float
																											Let
																												Td89.279 : float
																												Let
																													Td88.280 : float
																													Float 1.570796
																													FSub Td88.280 y.274
																												App taylor_sin.166 Td89.279 
																											FNeg Td90.278
																										Let
																											Td91.277 : float
																											App taylor_cos.164 y.274 
																											FNeg Td91.277
																					Let
																						Td92.263 : float
																						Float 1.570796
																						IfLE Td92.263 x.169
																							Let
																								Td93.267 : float
																								Float 2.356195
																								IfLE Td93.267 x.169
																									Let
																										Td96.271 : float
																										Let
																											Td95.272 : float
																											Let
																												Td94.273 : float
																												Float 3.141593
																												FSub Td94.273 x.169
																											App taylor_cos.164 Td95.272 
																										FNeg Td96.271
																									Let
																										Td99.268 : float
																										Let
																											Td98.269 : float
																											Let
																												Td97.270 : float
																												Float 1.570796
																												FSub x.169 Td97.270
																											App taylor_sin.166 Td98.269 
																										FNeg Td99.268
																							Let
																								Td100.264 : float
																								Float 0.785398
																								IfLE Td100.264 x.169
																									Let
																										Td102.265 : float
																										Let
																											Td101.266 : float
																											Float 1.570796
																											FSub Td101.266 x.169
																										App taylor_sin.166 Td102.265 
																									App taylor_cos.164 x.169 
																			Let
																				Td104.260 : float
																				Let
																					Td103.261 : float
																					Float 6.283185
																					FSub x.169 Td103.261
																				App cos.168 Td104.260 
																	Let
																		Td105.258 : float
																		FNeg x.169
																		App cos.168 Td105.258 
														LetRec
															FunDef
																sin.170 : (float -> float)
																x.171 : float
																Let
																	Td47.226 : float
																	Float 0.000000
																	IfLE Td47.226 x.171
																		Let
																			Td48.229 : float
																			Float 6.283185
																			IfLE x.171 Td48.229
																				Let
																					Td49.232 : float
																					Float 3.141593
																					IfLE Td49.232 x.171
																						Let
																							y.242 : float
																							Let
																								Td50.256 : float
																								Float 3.141593
																								FSub x.171 Td50.256
																							Let
																								Td51.243 : float
																								Float 1.570796
																								IfLE Td51.243 y.242
																									Let
																										Td52.249 : float
																										Float 2.356195
																										IfLE Td52.249 y.242
																											Let
																												Td55.253 : float
																												Let
																													Td54.254 : float
																													Let
																														Td53.255 : float
																														Float 3.141593
																														FSub Td53.255 y.242
																													App taylor_sin.166 Td54.254 
																												FNeg Td55.253
																											Let
																												Td58.250 : float
																												Let
																													Td57.251 : float
																													Let
																														Td56.252 : float
																														Float 1.570796
																														FSub y.242 Td56.252
																													App taylor_cos.164 Td57.251 
																												FNeg Td58.250
																									Let
																										Td59.244 : float
																										Float 0.785398
																										IfLE Td59.244 y.242
																											Let
																												Td62.246 : float
																												Let
																													Td61.247 : float
																													Let
																														Td60.248 : float
																														Float 1.570796
																														FSub Td60.248 y.242
																													App taylor_cos.164 Td61.247 
																												FNeg Td62.246
																											Let
																												Td63.245 : float
																												App taylor_sin.166 y.242 
																												FNeg Td63.245
																						Let
																							Td64.233 : float
																							Float 1.570796
																							IfLE Td64.233 x.171
																								Let
																									Td65.237 : float
																									Float 2.356195
																									IfLE Td65.237 x.171
																										Let
																											Td67.240 : float
																											Let
																												Td66.241 : float
																												Float 3.141593
																												FSub Td66.241 x.171
																											App taylor_sin.166 Td67.240 
																										Let
																											Td69.238 : float
																											Let
																												Td68.239 : float
																												Float 1.570796
																												FSub x.171 Td68.239
																											App taylor_cos.164 Td69.238 
																								Let
																									Td70.234 : float
																									Float 0.785398
																									IfLE Td70.234 x.171
																										Let
																											Td72.235 : float
																											Let
																												Td71.236 : float
																												Float 1.570796
																												FSub Td71.236 x.171
																											App taylor_cos.164 Td72.235 
																										App taylor_sin.166 x.171 
																				Let
																					Td74.230 : float
																					Let
																						Td73.231 : float
																						Float 6.283185
																						FSub x.171 Td73.231
																					App sin.170 Td74.230 
																		Let
																			Td76.227 : float
																			Let
																				Td75.228 : float
																				FNeg x.171
																				App sin.170 Td75.228 
																			FNeg Td76.227
															LetRec
																FunDef
																	taylor_atan.172 : (float -> float)
																	x.173 : float
																	Let
																		x2.206 : float
																		FMul x.173 x.173
																		Let
																			Td46.207 : float
																			Let
																				Td28.208 : float
																				Float 1.000000
																				Let
																					Td45.209 : float
																					Let
																						Td44.210 : float
																						Let
																							Td29.211 : float
																							Float 0.333333
																							Let
																								Td43.212 : float
																								Let
																									Td42.213 : float
																									Let
																										Td30.214 : float
																										Float 0.200000
																										Let
																											Td41.215 : float
																											Let
																												Td40.216 : float
																												Let
																													Td31.217 : float
																													Float 0.142857
																													Let
																														Td39.218 : float
																														Let
																															Td38.219 : float
																															Let
																																Td32.220 : float
																																Float 0.111111
																																Let
																																	Td37.221 : float
																																	Let
																																		Td36.222 : float
																																		Let
																																			Td33.223 : float
																																			Float 0.089764
																																			Let
																																				Td35.224 : float
																																				Let
																																					Td34.225 : float
																																					Float 0.060035
																																					FMul Td34.225 x2.206
																																				FSub Td33.223 Td35.224
																																		FMul x2.206 Td36.222
																																	FSub Td32.220 Td37.221
																															FMul x2.206 Td38.219
																														FSub Td31.217 Td39.218
																												FMul x2.206 Td40.216
																											FSub Td30.214 Td41.215
																									FMul x2.206 Td42.213
																								FSub Td29.211 Td43.212
																						FMul x2.206 Td44.210
																					FSub Td28.208 Td45.209
																			FMul x.173 Td46.207
																LetRec
																	FunDef
																		atan.174 : (float -> float)
																		x.175 : float
																		Let
																			Td13.190 : float
																			Float 0.000000
																			IfLE Td13.190 x.175
																				Let
																					Td14.193 : float
																					Float 0.437500
																					IfLE Td14.193 x.175
																						Let
																							Td15.194 : float
																							Float 2.356195
																							IfLE Td15.194 x.175
																								Let
																									Td16.202 : float
																									Float 1.570796
																									Let
																										Td19.203 : float
																										Let
																											Td18.204 : float
																											Let
																												Td17.205 : float
																												Float 1.000000
																												FDiv Td17.205 x.175
																											App taylor_atan.172 Td18.204 
																										FSub Td16.202 Td19.203
																								Let
																									Td20.195 : float
																									Float 0.785398
																									Let
																										Td26.196 : float
																										Let
																											Td25.197 : float
																											Let
																												Td22.198 : float
																												Let
																													Td21.201 : float
																													Float 1.000000
																													FSub x.175 Td21.201
																												Let
																													Td24.199 : float
																													Let
																														Td23.200 : float
																														Float 1.000000
																														FAdd x.175 Td23.200
																													FDiv Td22.198 Td24.199
																											App taylor_atan.172 Td25.197 
																										FAdd Td20.195 Td26.196
																						App taylor_atan.172 x.175 
																				Let
																					y.191 : float
																					FNeg x.175
																					Let
																						Td27.192 : float
																						App atan.174 y.191 
																						FNeg Td27.192
																	LetRec
																		FunDef
																			add.176 : (int -> int)
																			n.177 : int
																			Let
																				Ti3.180 : int
																				Int 2
																				IfLE n.177 Ti3.180
																					Int 1
																					Let
																						Ti10.181 : int
																						Let
																							Ti6.184 : int
																							Let
																								Ti5.188 : int
																								Let
																									Ti4.189 : int
																									Int 1
																									Sub n.177 Ti4.189
																								App add.176 Ti5.188 
																							Let
																								Ti9.185 : int
																								Let
																									Ti8.186 : int
																									Let
																										Ti7.187 : int
																										Int 2
																										Sub n.177 Ti7.187
																									App add.176 Ti8.186 
																								Add Ti6.184 Ti9.185
																						Let
																							Ti12.182 : int
																							Let
																								Tu11.183 : unit
																								Unit
																								ExtFunApp read_int Tu11.183 
																							Add Ti10.181 Ti12.182
																		Let
																			Ti2.178 : int
																			Let
																				Ti1.179 : int
																				Int 7
																				App add.176 Ti1.179 
																			ExtFunApp print_int Ti2.178 


<****** iter ******>
LetRec
	FunDef
		add.176 : (int -> int)
		n.177 : int
		Let
			Ti3.180 : int
			Int 2
			IfLE n.177 Ti3.180
				Int 1
				Let
					Ti4.189 : int
					Int 1
					Let
						Ti5.188 : int
						Sub n.177 Ti4.189
						Let
							Ti6.184 : int
							App add.176 Ti5.188 
							Let
								Ti7.187 : int
								Int 2
								Let
									Ti8.186 : int
									Sub n.177 Ti7.187
									Let
										Ti9.185 : int
										App add.176 Ti8.186 
										Let
											Ti10.181 : int
											Add Ti6.184 Ti9.185
											Let
												Tu11.183 : unit
												Unit
												Let
													Ti12.182 : int
													ExtFunApp read_int Tu11.183 
													Add Ti10.181 Ti12.182
	Let
		Ti1.179 : int
		Int 7
		Let
			Ti2.178 : int
			App add.176 Ti1.179 
			ExtFunApp print_int Ti2.178 


<****** Closure ******>
Prog
	FunDef
		/* name */
		Ladd.176 : (int -> int)
		/* args */
		n.177 : int
		/* formal_fv */
		/* body */
		Let
			Ti3.180 : int
			Int 2
			IfLE n.177 Ti3.180
				Int 1
				Let
					Ti4.189 : int
					Int 1
					Let
						Ti5.188 : int
						Sub n.177 Ti4.189
						Let
							Ti6.184 : int
							AppDir Ladd.176 Ti5.188 
							Let
								Ti7.187 : int
								Int 2
								Let
									Ti8.186 : int
									Sub n.177 Ti7.187
									Let
										Ti9.185 : int
										AppDir Ladd.176 Ti8.186 
										Let
											Ti10.181 : int
											Add Ti6.184 Ti9.185
											Let
												Tu11.183 : unit
												Unit
												Let
													Ti12.182 : int
													AppDir Lmin_caml_read_int Tu11.183 
													Add Ti10.181 Ti12.182
	Let
		Ti1.179 : int
		Int 7
		Let
			Ti2.178 : int
			AppDir Ladd.176 Ti1.179 
			AppDir Lmin_caml_print_int Ti2.178 


<****** Virtual ******>
Prog
	FunDef
		Ladd.176
		/* args */
		n.177
		/* fargs */
		Let
			Ti3.180 : int
			Set 2
			Ans
				IfLE n.177 (V Ti3.180)
					Ans
						Set 1
					Let
						Ti4.189 : int
						Set 1
						Let
							Ti5.188 : int
							Sub n.177 (V Ti4.189)
							Let
								Ti6.184 : int
								CallDir
									Ladd.176
									Ti5.188 
									
								Let
									Ti7.187 : int
									Set 2
									Let
										Ti8.186 : int
										Sub n.177 (V Ti7.187)
										Let
											Ti9.185 : int
											CallDir
												Ladd.176
												Ti8.186 
												
											Let
												Ti10.181 : int
												Add Ti6.184 (V Ti9.185)
												Let
													Tu11.183 : unit
													Nop
													Let
														Ti12.182 : int
														CallDir
															Lmin_caml_read_int
															
															
														Ans
															Add Ti10.181 (V Ti12.182)
		int
	Let
		Ti1.179 : int
		Set 7
		Let
			Ti2.178 : int
			CallDir
				Ladd.176
				Ti1.179 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.178 
					


<****** Simm ******>
Prog
	FunDef
		Ladd.176
		/* args */
		n.177
		/* fargs */
		Ans
			IfLE n.177 (C 2)
				Ans
					Set 1
				Let
					Ti5.188 : int
					Sub n.177 (C 1)
					Let
						Ti6.184 : int
						CallDir
							Ladd.176
							Ti5.188 
							
						Let
							Ti8.186 : int
							Sub n.177 (C 2)
							Let
								Ti9.185 : int
								CallDir
									Ladd.176
									Ti8.186 
									
								Let
									Ti10.181 : int
									Add Ti6.184 (V Ti9.185)
									Let
										Tu11.183 : unit
										Nop
										Let
											Ti12.182 : int
											CallDir
												Lmin_caml_read_int
												
												
											Ans
												Add Ti10.181 (V Ti12.182)
		int
	Let
		Ti1.179 : int
		Set 7
		Let
			Ti2.178 : int
			CallDir
				Ladd.176
				Ti1.179 
				
			Ans
				CallDir
					Lmin_caml_print_int
					Ti2.178 
					


<****** RegAlloc ******>
Prog
	FunDef
		Ladd.176
		/* args */
		$2
		/* fargs */
		Ans
			IfLE $2 (C 2)
				Ans
					Set 1
				Let
					$3 : int
					Sub $2 (C 1)
					Let
						Tu323 : unit
						Save $2 n.177
						Let
							$2 : int
							CallDir
								Ladd.176
								$3 
								
							Let
								$3 : int
								Restore n.177
								Let
									$3 : int
									Sub $3 (C 2)
									Let
										Tu324 : unit
										Save $2 Ti6.184
										Let
											$2 : int
											CallDir
												Ladd.176
												$3 
												
											Let
												$3 : int
												Restore Ti6.184
												Let
													$2 : int
													Add $3 (V $2)
													Let
														%g0 : unit
														Nop
														Let
															Tu325 : unit
															Save $2 Ti10.181
															Let
																$2 : int
																CallDir
																	Lmin_caml_read_int
																	
																	
																Let
																	$3 : int
																	Restore Ti10.181
																	Ans
																		Add $3 (V $2)
		int
	Let
		$2 : int
		Set 7
		Let
			$2 : int
			CallDir
				Ladd.176
				$2 
				
			Ans
				CallDir
					Lmin_caml_print_int
					$2 
					
